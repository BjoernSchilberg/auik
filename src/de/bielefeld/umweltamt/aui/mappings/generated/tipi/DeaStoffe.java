/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 3.3.0.GA

package de.bielefeld.umweltamt.aui.mappings.generated.tipi;

import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import de.bielefeld.umweltamt.aui.utils.DatabaseAccess;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

/**
 * A class that represents a row in the DeaStoffe database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class DeaStoffe  implements java.io.Serializable {

    /* Primary key, foreign keys (relations) and table columns */
    private DeaStoffeId id;
    private Calendar inkaGueltigVon;
    private Calendar inkaGueltigBis;
    private short istAktuellTog;
    private Calendar erfassungsDatum;
    private Calendar aenderungsDatum;
    private String kurzname;
    private String casId;
    private Integer igsNr;
    private String name;
    private String iupac;
    private String synonym1;
    private String synonym2;
    private String synonym3;
    private String synonym4;
    private String synonym5;
    private String summenformel;
    private String beschreibung;
    private int zustandsNr;
    private Calendar gueltigVon;
    private Calendar igStichtag;
    private Calendar gueltigBis;
    private Calendar erstellDat;
    private Calendar aktualDat;
    private int versionsnr;
    private Calendar zeitstempel;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public DeaStoffe() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public DeaStoffe(
        DeaStoffeId id, Calendar inkaGueltigVon, short istAktuellTog, Calendar erfassungsDatum, int zustandsNr, Calendar gueltigVon, Calendar erstellDat, Calendar aktualDat, int versionsnr) {
        this.id = id;
        this.inkaGueltigVon = inkaGueltigVon;
        this.istAktuellTog = istAktuellTog;
        this.erfassungsDatum = erfassungsDatum;
        this.zustandsNr = zustandsNr;
        this.gueltigVon = gueltigVon;
        this.erstellDat = erstellDat;
        this.aktualDat = aktualDat;
        this.versionsnr = versionsnr;
    }

    /** Full constructor */
    public DeaStoffe(
        DeaStoffeId id, Calendar inkaGueltigVon, Calendar inkaGueltigBis, short istAktuellTog, Calendar erfassungsDatum, Calendar aenderungsDatum, String kurzname, String casId, Integer igsNr, String name, String iupac, String synonym1, String synonym2, String synonym3, String synonym4, String synonym5, String summenformel, String beschreibung, int zustandsNr, Calendar gueltigVon, Calendar igStichtag, Calendar gueltigBis, Calendar erstellDat, Calendar aktualDat, int versionsnr, Calendar zeitstempel) {
        this.id = id;
        this.inkaGueltigVon = inkaGueltigVon;
        this.inkaGueltigBis = inkaGueltigBis;
        this.istAktuellTog = istAktuellTog;
        this.erfassungsDatum = erfassungsDatum;
        this.aenderungsDatum = aenderungsDatum;
        this.kurzname = kurzname;
        this.casId = casId;
        this.igsNr = igsNr;
        this.name = name;
        this.iupac = iupac;
        this.synonym1 = synonym1;
        this.synonym2 = synonym2;
        this.synonym3 = synonym3;
        this.synonym4 = synonym4;
        this.synonym5 = synonym5;
        this.summenformel = summenformel;
        this.beschreibung = beschreibung;
        this.zustandsNr = zustandsNr;
        this.gueltigVon = gueltigVon;
        this.igStichtag = igStichtag;
        this.gueltigBis = gueltigBis;
        this.erstellDat = erstellDat;
        this.aktualDat = aktualDat;
        this.versionsnr = versionsnr;
        this.zeitstempel = zeitstempel;
    }

    /* Setter and getter methods */
    public DeaStoffeId getId() {
        return this.id;
    }

    public void setId(DeaStoffeId id) {
        this.id = id;
    }

    public Calendar getInkaGueltigVon() {
        return this.inkaGueltigVon;
    }

    public void setInkaGueltigVon(Calendar inkaGueltigVon) {
        this.inkaGueltigVon = inkaGueltigVon;
    }

    public Calendar getInkaGueltigBis() {
        return this.inkaGueltigBis;
    }

    public void setInkaGueltigBis(Calendar inkaGueltigBis) {
        this.inkaGueltigBis = inkaGueltigBis;
    }

    public short getIstAktuellTog() {
        return this.istAktuellTog;
    }

    public void setIstAktuellTog(short istAktuellTog) {
        this.istAktuellTog = istAktuellTog;
    }

    public Calendar getErfassungsDatum() {
        return this.erfassungsDatum;
    }

    public void setErfassungsDatum(Calendar erfassungsDatum) {
        this.erfassungsDatum = erfassungsDatum;
    }

    public Calendar getAenderungsDatum() {
        return this.aenderungsDatum;
    }

    public void setAenderungsDatum(Calendar aenderungsDatum) {
        this.aenderungsDatum = aenderungsDatum;
    }

    public String getKurzname() {
        return this.kurzname;
    }

    public void setKurzname(String kurzname) {
        this.kurzname = kurzname;
    }

    public String getCasId() {
        return this.casId;
    }

    public void setCasId(String casId) {
        this.casId = casId;
    }

    public Integer getIgsNr() {
        return this.igsNr;
    }

    public void setIgsNr(Integer igsNr) {
        this.igsNr = igsNr;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getIupac() {
        return this.iupac;
    }

    public void setIupac(String iupac) {
        this.iupac = iupac;
    }

    public String getSynonym1() {
        return this.synonym1;
    }

    public void setSynonym1(String synonym1) {
        this.synonym1 = synonym1;
    }

    public String getSynonym2() {
        return this.synonym2;
    }

    public void setSynonym2(String synonym2) {
        this.synonym2 = synonym2;
    }

    public String getSynonym3() {
        return this.synonym3;
    }

    public void setSynonym3(String synonym3) {
        this.synonym3 = synonym3;
    }

    public String getSynonym4() {
        return this.synonym4;
    }

    public void setSynonym4(String synonym4) {
        this.synonym4 = synonym4;
    }

    public String getSynonym5() {
        return this.synonym5;
    }

    public void setSynonym5(String synonym5) {
        this.synonym5 = synonym5;
    }

    public String getSummenformel() {
        return this.summenformel;
    }

    public void setSummenformel(String summenformel) {
        this.summenformel = summenformel;
    }

    public String getBeschreibung() {
        return this.beschreibung;
    }

    public void setBeschreibung(String beschreibung) {
        this.beschreibung = beschreibung;
    }

    public int getZustandsNr() {
        return this.zustandsNr;
    }

    public void setZustandsNr(int zustandsNr) {
        this.zustandsNr = zustandsNr;
    }

    public Calendar getGueltigVon() {
        return this.gueltigVon;
    }

    public void setGueltigVon(Calendar gueltigVon) {
        this.gueltigVon = gueltigVon;
    }

    public Calendar getIgStichtag() {
        return this.igStichtag;
    }

    public void setIgStichtag(Calendar igStichtag) {
        this.igStichtag = igStichtag;
    }

    public Calendar getGueltigBis() {
        return this.gueltigBis;
    }

    public void setGueltigBis(Calendar gueltigBis) {
        this.gueltigBis = gueltigBis;
    }

    public Calendar getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Calendar erstellDat) {
        this.erstellDat = erstellDat;
    }

    public Calendar getAktualDat() {
        return this.aktualDat;
    }

    public void setAktualDat(Calendar aktualDat) {
        this.aktualDat = aktualDat;
    }

    public int getVersionsnr() {
        return this.versionsnr;
    }

    public void setVersionsnr(int versionsnr) {
        this.versionsnr = versionsnr;
    }

    public Calendar getZeitstempel() {
        return this.zeitstempel;
    }

    public void setZeitstempel(Calendar zeitstempel) {
        this.zeitstempel = zeitstempel;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>DeaStoffe</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static DeaStoffe merge(DeaStoffe detachedInstance) {
        log.debug("Merging DeaStoffe instance " + detachedInstance);
        return (DeaStoffe) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        return DeaStoffe.merge(this).equals(this);
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(DeaStoffe detachedInstance) {
        log.debug("Deleting DeaStoffe instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return DeaStoffe.delete(this);
    }

    /**
     * Find an <code>DeaStoffe</code> instance by its primary key
     * @param id the primary key value
     * @return <code>DeaStoffe</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static DeaStoffe findById(de.bielefeld.umweltamt.aui.mappings.generated.tipi.DeaStoffeId id) {
        log.debug("Getting DeaStoffe instance with id: " + id);
        return (DeaStoffe)
            new DatabaseAccess().get(DeaStoffe.class, id);
    }

    /**
     * Get a list of all <code>DeaStoffe</code>
     * @return <code>List&lt;DeaStoffe&gt;</code>
     *         all <code>DeaStoffe</code>
     */
    public static List<DeaStoffe> getAll() {
        log.debug("Getting all DeaStoffe instances");
        String query = "FROM DeaStoffe";
        List<?> objectList = new DatabaseAccess().createQuery(query).list(); 
        List<DeaStoffe> resultList = new ArrayList<DeaStoffe>();
        DeaStoffe result = null;
        for (Object object : objectList) {
            result = (DeaStoffe) object;
            resultList.add(result); 
        }
        return resultList;
    }

    /* Custom code goes below here! */

}
