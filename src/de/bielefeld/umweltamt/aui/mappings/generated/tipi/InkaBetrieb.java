/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 3.3.0.GA

package de.bielefeld.umweltamt.aui.mappings.generated.tipi;

import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import de.bielefeld.umweltamt.aui.utils.DatabaseAccess;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

/**
 * A class that represents a row in the InkaBetrieb database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class InkaBetrieb  implements java.io.Serializable {

    /* Primary key, foreign keys (relations) and table columns */
    private Integer betriebNr;
    private Integer betriebVer;
    private Calendar gueltigVon;
    private Calendar gueltigBis;
    private Calendar aenderungsDatum;
    private Calendar erfassungsDatum;
    private Integer historienNr;
    private Boolean istAktuellJn;
    private Integer adresseStandNr;
    private Integer adresseStandVer;
    private Integer adresseEinleitNr;
    private Integer adresseEinleitVer;
    private Integer adresseAnsprNr;
    private Integer adresseAnsprVer;
    private String gemeindekennzahl;
    private Integer gemeindeVer;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public InkaBetrieb() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public InkaBetrieb(
        Integer betriebNr) {
        this.betriebNr = betriebNr;
    }

    /** Full constructor */
    public InkaBetrieb(
        Integer betriebNr, Integer betriebVer, Calendar gueltigVon, Calendar gueltigBis, Calendar aenderungsDatum, Calendar erfassungsDatum, Integer historienNr, Boolean istAktuellJn, Integer adresseStandNr, Integer adresseStandVer, Integer adresseEinleitNr, Integer adresseEinleitVer, Integer adresseAnsprNr, Integer adresseAnsprVer, String gemeindekennzahl, Integer gemeindeVer) {
        this.betriebNr = betriebNr;
        this.betriebVer = betriebVer;
        this.gueltigVon = gueltigVon;
        this.gueltigBis = gueltigBis;
        this.aenderungsDatum = aenderungsDatum;
        this.erfassungsDatum = erfassungsDatum;
        this.historienNr = historienNr;
        this.istAktuellJn = istAktuellJn;
        this.adresseStandNr = adresseStandNr;
        this.adresseStandVer = adresseStandVer;
        this.adresseEinleitNr = adresseEinleitNr;
        this.adresseEinleitVer = adresseEinleitVer;
        this.adresseAnsprNr = adresseAnsprNr;
        this.adresseAnsprVer = adresseAnsprVer;
        this.gemeindekennzahl = gemeindekennzahl;
        this.gemeindeVer = gemeindeVer;
    }

    /* Setter and getter methods */
    public Integer getBetriebNr() {
        return this.betriebNr;
    }

    public void setBetriebNr(Integer betriebNr) {
        this.betriebNr = betriebNr;
    }

    public Integer getBetriebVer() {
        return this.betriebVer;
    }

    public void setBetriebVer(Integer betriebVer) {
        this.betriebVer = betriebVer;
    }

    public Calendar getGueltigVon() {
        return this.gueltigVon;
    }

    public void setGueltigVon(Calendar gueltigVon) {
        this.gueltigVon = gueltigVon;
    }

    public Calendar getGueltigBis() {
        return this.gueltigBis;
    }

    public void setGueltigBis(Calendar gueltigBis) {
        this.gueltigBis = gueltigBis;
    }

    public Calendar getAenderungsDatum() {
        return this.aenderungsDatum;
    }

    public void setAenderungsDatum(Calendar aenderungsDatum) {
        this.aenderungsDatum = aenderungsDatum;
    }

    public Calendar getErfassungsDatum() {
        return this.erfassungsDatum;
    }

    public void setErfassungsDatum(Calendar erfassungsDatum) {
        this.erfassungsDatum = erfassungsDatum;
    }

    public Integer getHistorienNr() {
        return this.historienNr;
    }

    public void setHistorienNr(Integer historienNr) {
        this.historienNr = historienNr;
    }

    public Boolean getIstAktuellJn() {
        return this.istAktuellJn;
    }

    public void setIstAktuellJn(Boolean istAktuellJn) {
        this.istAktuellJn = istAktuellJn;
    }

    public Integer getAdresseStandNr() {
        return this.adresseStandNr;
    }

    public void setAdresseStandNr(Integer adresseStandNr) {
        this.adresseStandNr = adresseStandNr;
    }

    public Integer getAdresseStandVer() {
        return this.adresseStandVer;
    }

    public void setAdresseStandVer(Integer adresseStandVer) {
        this.adresseStandVer = adresseStandVer;
    }

    public Integer getAdresseEinleitNr() {
        return this.adresseEinleitNr;
    }

    public void setAdresseEinleitNr(Integer adresseEinleitNr) {
        this.adresseEinleitNr = adresseEinleitNr;
    }

    public Integer getAdresseEinleitVer() {
        return this.adresseEinleitVer;
    }

    public void setAdresseEinleitVer(Integer adresseEinleitVer) {
        this.adresseEinleitVer = adresseEinleitVer;
    }

    public Integer getAdresseAnsprNr() {
        return this.adresseAnsprNr;
    }

    public void setAdresseAnsprNr(Integer adresseAnsprNr) {
        this.adresseAnsprNr = adresseAnsprNr;
    }

    public Integer getAdresseAnsprVer() {
        return this.adresseAnsprVer;
    }

    public void setAdresseAnsprVer(Integer adresseAnsprVer) {
        this.adresseAnsprVer = adresseAnsprVer;
    }

    public String getGemeindekennzahl() {
        return this.gemeindekennzahl;
    }

    public void setGemeindekennzahl(String gemeindekennzahl) {
        this.gemeindekennzahl = gemeindekennzahl;
    }

    public Integer getGemeindeVer() {
        return this.gemeindeVer;
    }

    public void setGemeindeVer(Integer gemeindeVer) {
        this.gemeindeVer = gemeindeVer;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>InkaBetrieb</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static InkaBetrieb merge(InkaBetrieb detachedInstance) {
        log.debug("Merging InkaBetrieb instance " + detachedInstance);
        return (InkaBetrieb) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        return InkaBetrieb.merge(this).equals(this);
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(InkaBetrieb detachedInstance) {
        log.debug("Deleting InkaBetrieb instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return InkaBetrieb.delete(this);
    }

    /**
     * Find an <code>InkaBetrieb</code> instance by its primary key
     * @param id the primary key value
     * @return <code>InkaBetrieb</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static InkaBetrieb findById(java.lang.Integer id) {
        log.debug("Getting InkaBetrieb instance with id: " + id);
        return (InkaBetrieb)
            new DatabaseAccess().get(InkaBetrieb.class, id);
    }

    /**
     * Get a list of all <code>InkaBetrieb</code>
     * @return <code>List&lt;InkaBetrieb&gt;</code>
     *         all <code>InkaBetrieb</code>
     */
    public static List<InkaBetrieb> getAll() {
        log.debug("Getting all InkaBetrieb instances");
        String query = "FROM InkaBetrieb";
        List<?> objectList = new DatabaseAccess().createQuery(query).list(); 
        List<InkaBetrieb> resultList = new ArrayList<InkaBetrieb>();
        InkaBetrieb result = null;
        for (Object object : objectList) {
            result = (InkaBetrieb) object;
            resultList.add(result); 
        }
        return resultList;
    }

    /* Custom code goes below here! */

}
