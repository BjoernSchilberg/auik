/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 3.3.0.GA

package de.bielefeld.umweltamt.aui.mappings.generated.tipi;

import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import de.bielefeld.umweltamt.aui.utils.DatabaseAccess;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

/**
 * A class that represents a row in the DeaTk25 database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class DeaTk25  implements java.io.Serializable {

    /* Primary key, foreign keys (relations) and table columns */
    private DeaTk25Id id;
    private Calendar inkaGueltigVon;
    private Calendar inkaGueltigBis;
    private short istAktuellTog;
    private Calendar erfassungsDatum;
    private Calendar aenderungsDatum;
    private String name;
    private Integer gkkMinRechts2;
    private Integer gkkMinHoch2;
    private Integer gkkMaxRechts2;
    private Integer gkkMaxHoch2;
    private Integer gkkMinRechts3;
    private Integer gkkMinHoch3;
    private Integer gkkMaxRechts3;
    private Integer gkkMaxHoch3;
    private Integer n32Max;
    private Integer e32Max;
    private Integer n32Min;
    private Integer e32Min;
    private int zustandsNr;
    private Calendar gueltigVon;
    private Calendar igStichtag;
    private Calendar gueltigBis;
    private Calendar erstellDat;
    private Calendar aktualDat;
    private int versionsnr;
    private Calendar zeitstempel;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public DeaTk25() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public DeaTk25(
        DeaTk25Id id, Calendar inkaGueltigVon, short istAktuellTog, Calendar erfassungsDatum, int zustandsNr, Calendar gueltigVon, Calendar erstellDat, Calendar aktualDat, int versionsnr) {
        this.id = id;
        this.inkaGueltigVon = inkaGueltigVon;
        this.istAktuellTog = istAktuellTog;
        this.erfassungsDatum = erfassungsDatum;
        this.zustandsNr = zustandsNr;
        this.gueltigVon = gueltigVon;
        this.erstellDat = erstellDat;
        this.aktualDat = aktualDat;
        this.versionsnr = versionsnr;
    }

    /** Full constructor */
    public DeaTk25(
        DeaTk25Id id, Calendar inkaGueltigVon, Calendar inkaGueltigBis, short istAktuellTog, Calendar erfassungsDatum, Calendar aenderungsDatum, String name, Integer gkkMinRechts2, Integer gkkMinHoch2, Integer gkkMaxRechts2, Integer gkkMaxHoch2, Integer gkkMinRechts3, Integer gkkMinHoch3, Integer gkkMaxRechts3, Integer gkkMaxHoch3, Integer n32Max, Integer e32Max, Integer n32Min, Integer e32Min, int zustandsNr, Calendar gueltigVon, Calendar igStichtag, Calendar gueltigBis, Calendar erstellDat, Calendar aktualDat, int versionsnr, Calendar zeitstempel) {
        this.id = id;
        this.inkaGueltigVon = inkaGueltigVon;
        this.inkaGueltigBis = inkaGueltigBis;
        this.istAktuellTog = istAktuellTog;
        this.erfassungsDatum = erfassungsDatum;
        this.aenderungsDatum = aenderungsDatum;
        this.name = name;
        this.gkkMinRechts2 = gkkMinRechts2;
        this.gkkMinHoch2 = gkkMinHoch2;
        this.gkkMaxRechts2 = gkkMaxRechts2;
        this.gkkMaxHoch2 = gkkMaxHoch2;
        this.gkkMinRechts3 = gkkMinRechts3;
        this.gkkMinHoch3 = gkkMinHoch3;
        this.gkkMaxRechts3 = gkkMaxRechts3;
        this.gkkMaxHoch3 = gkkMaxHoch3;
        this.n32Max = n32Max;
        this.e32Max = e32Max;
        this.n32Min = n32Min;
        this.e32Min = e32Min;
        this.zustandsNr = zustandsNr;
        this.gueltigVon = gueltigVon;
        this.igStichtag = igStichtag;
        this.gueltigBis = gueltigBis;
        this.erstellDat = erstellDat;
        this.aktualDat = aktualDat;
        this.versionsnr = versionsnr;
        this.zeitstempel = zeitstempel;
    }

    /* Setter and getter methods */
    public DeaTk25Id getId() {
        return this.id;
    }

    public void setId(DeaTk25Id id) {
        this.id = id;
    }

    public Calendar getInkaGueltigVon() {
        return this.inkaGueltigVon;
    }

    public void setInkaGueltigVon(Calendar inkaGueltigVon) {
        this.inkaGueltigVon = inkaGueltigVon;
    }

    public Calendar getInkaGueltigBis() {
        return this.inkaGueltigBis;
    }

    public void setInkaGueltigBis(Calendar inkaGueltigBis) {
        this.inkaGueltigBis = inkaGueltigBis;
    }

    public short getIstAktuellTog() {
        return this.istAktuellTog;
    }

    public void setIstAktuellTog(short istAktuellTog) {
        this.istAktuellTog = istAktuellTog;
    }

    public Calendar getErfassungsDatum() {
        return this.erfassungsDatum;
    }

    public void setErfassungsDatum(Calendar erfassungsDatum) {
        this.erfassungsDatum = erfassungsDatum;
    }

    public Calendar getAenderungsDatum() {
        return this.aenderungsDatum;
    }

    public void setAenderungsDatum(Calendar aenderungsDatum) {
        this.aenderungsDatum = aenderungsDatum;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getGkkMinRechts2() {
        return this.gkkMinRechts2;
    }

    public void setGkkMinRechts2(Integer gkkMinRechts2) {
        this.gkkMinRechts2 = gkkMinRechts2;
    }

    public Integer getGkkMinHoch2() {
        return this.gkkMinHoch2;
    }

    public void setGkkMinHoch2(Integer gkkMinHoch2) {
        this.gkkMinHoch2 = gkkMinHoch2;
    }

    public Integer getGkkMaxRechts2() {
        return this.gkkMaxRechts2;
    }

    public void setGkkMaxRechts2(Integer gkkMaxRechts2) {
        this.gkkMaxRechts2 = gkkMaxRechts2;
    }

    public Integer getGkkMaxHoch2() {
        return this.gkkMaxHoch2;
    }

    public void setGkkMaxHoch2(Integer gkkMaxHoch2) {
        this.gkkMaxHoch2 = gkkMaxHoch2;
    }

    public Integer getGkkMinRechts3() {
        return this.gkkMinRechts3;
    }

    public void setGkkMinRechts3(Integer gkkMinRechts3) {
        this.gkkMinRechts3 = gkkMinRechts3;
    }

    public Integer getGkkMinHoch3() {
        return this.gkkMinHoch3;
    }

    public void setGkkMinHoch3(Integer gkkMinHoch3) {
        this.gkkMinHoch3 = gkkMinHoch3;
    }

    public Integer getGkkMaxRechts3() {
        return this.gkkMaxRechts3;
    }

    public void setGkkMaxRechts3(Integer gkkMaxRechts3) {
        this.gkkMaxRechts3 = gkkMaxRechts3;
    }

    public Integer getGkkMaxHoch3() {
        return this.gkkMaxHoch3;
    }

    public void setGkkMaxHoch3(Integer gkkMaxHoch3) {
        this.gkkMaxHoch3 = gkkMaxHoch3;
    }

    public Integer getN32Max() {
        return this.n32Max;
    }

    public void setN32Max(Integer n32Max) {
        this.n32Max = n32Max;
    }

    public Integer getE32Max() {
        return this.e32Max;
    }

    public void setE32Max(Integer e32Max) {
        this.e32Max = e32Max;
    }

    public Integer getN32Min() {
        return this.n32Min;
    }

    public void setN32Min(Integer n32Min) {
        this.n32Min = n32Min;
    }

    public Integer getE32Min() {
        return this.e32Min;
    }

    public void setE32Min(Integer e32Min) {
        this.e32Min = e32Min;
    }

    public int getZustandsNr() {
        return this.zustandsNr;
    }

    public void setZustandsNr(int zustandsNr) {
        this.zustandsNr = zustandsNr;
    }

    public Calendar getGueltigVon() {
        return this.gueltigVon;
    }

    public void setGueltigVon(Calendar gueltigVon) {
        this.gueltigVon = gueltigVon;
    }

    public Calendar getIgStichtag() {
        return this.igStichtag;
    }

    public void setIgStichtag(Calendar igStichtag) {
        this.igStichtag = igStichtag;
    }

    public Calendar getGueltigBis() {
        return this.gueltigBis;
    }

    public void setGueltigBis(Calendar gueltigBis) {
        this.gueltigBis = gueltigBis;
    }

    public Calendar getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Calendar erstellDat) {
        this.erstellDat = erstellDat;
    }

    public Calendar getAktualDat() {
        return this.aktualDat;
    }

    public void setAktualDat(Calendar aktualDat) {
        this.aktualDat = aktualDat;
    }

    public int getVersionsnr() {
        return this.versionsnr;
    }

    public void setVersionsnr(int versionsnr) {
        this.versionsnr = versionsnr;
    }

    public Calendar getZeitstempel() {
        return this.zeitstempel;
    }

    public void setZeitstempel(Calendar zeitstempel) {
        this.zeitstempel = zeitstempel;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>DeaTk25</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static DeaTk25 merge(DeaTk25 detachedInstance) {
        log.debug("Merging DeaTk25 instance " + detachedInstance);
        return (DeaTk25) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        return DeaTk25.merge(this).equals(this);
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(DeaTk25 detachedInstance) {
        log.debug("Deleting DeaTk25 instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return DeaTk25.delete(this);
    }

    /**
     * Find an <code>DeaTk25</code> instance by its primary key
     * @param id the primary key value
     * @return <code>DeaTk25</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static DeaTk25 findById(de.bielefeld.umweltamt.aui.mappings.generated.tipi.DeaTk25Id id) {
        log.debug("Getting DeaTk25 instance with id: " + id);
        return (DeaTk25)
            new DatabaseAccess().get(DeaTk25.class, id);
    }

    /**
     * Get a list of all <code>DeaTk25</code>
     * @return <code>List&lt;DeaTk25&gt;</code>
     *         all <code>DeaTk25</code>
     */
    public static List<DeaTk25> getAll() {
        log.debug("Getting all DeaTk25 instances");
        String query = "FROM DeaTk25";
        List<?> objectList = new DatabaseAccess().createQuery(query).list(); 
        List<DeaTk25> resultList = new ArrayList<DeaTk25>();
        DeaTk25 result = null;
        for (Object object : objectList) {
            result = (DeaTk25) object;
            resultList.add(result); 
        }
        return resultList;
    }

    /* Custom code goes below here! */

}
