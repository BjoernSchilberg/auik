/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 3.3.0.GA

package de.bielefeld.umweltamt.aui.mappings.generated.tipi;

import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import de.bielefeld.umweltamt.aui.utils.DatabaseAccess;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

/**
 * A class that represents a row in the DeaParameter database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class DeaParameter  implements java.io.Serializable {

    /* Primary key, foreign keys (relations) and table columns */
    private DeaParameterId id;
    private Calendar inkaGueltigVon;
    private Calendar inkaGueltigBis;
    private short istAktuellTog;
    private Calendar erfassungsDatum;
    private Calendar aenderungsDatum;
    private Integer stoffNr;
    private Integer stoffVersion;
    private String regelwerkId;
    private String gruppeDevId;
    private Character variantenId;
    private Integer analyseVersion;
    private Integer masseinheitenNr;
    private Integer masseinheitenVersion;
    private int trennNrOpt;
    private Short abgaberelevantTog;
    private String berechnungPara;
    private Short frachtparTog;
    private Short umrechTog;
    private Integer stoffNr1;
    private Integer trennNr1;
    private Integer masseinheitenNr1;
    private String analyseverfPara;
    private String analyseverf1Para;
    private Short parBedingungTog;
    private Short parBereichTog;
    private Calendar veranDatAb;
    private Calendar veranDatBis;
    private Character parVerwendung;
    private int zustandsNr;
    private Calendar gueltigVon;
    private Calendar igStichtag;
    private Calendar gueltigBis;
    private Calendar erstellDat;
    private Calendar aktualDat;
    private int versionsnr;
    private Calendar zeitstempel;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public DeaParameter() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public DeaParameter(
        DeaParameterId id, Calendar inkaGueltigVon, short istAktuellTog, Calendar erfassungsDatum, int trennNrOpt, int zustandsNr, Calendar gueltigVon, Calendar erstellDat, Calendar aktualDat, int versionsnr) {
        this.id = id;
        this.inkaGueltigVon = inkaGueltigVon;
        this.istAktuellTog = istAktuellTog;
        this.erfassungsDatum = erfassungsDatum;
        this.trennNrOpt = trennNrOpt;
        this.zustandsNr = zustandsNr;
        this.gueltigVon = gueltigVon;
        this.erstellDat = erstellDat;
        this.aktualDat = aktualDat;
        this.versionsnr = versionsnr;
    }

    /** Full constructor */
    public DeaParameter(
        DeaParameterId id, Calendar inkaGueltigVon, Calendar inkaGueltigBis, short istAktuellTog, Calendar erfassungsDatum, Calendar aenderungsDatum, Integer stoffNr, Integer stoffVersion, String regelwerkId, String gruppeDevId, Character variantenId, Integer analyseVersion, Integer masseinheitenNr, Integer masseinheitenVersion, int trennNrOpt, Short abgaberelevantTog, String berechnungPara, Short frachtparTog, Short umrechTog, Integer stoffNr1, Integer trennNr1, Integer masseinheitenNr1, String analyseverfPara, String analyseverf1Para, Short parBedingungTog, Short parBereichTog, Calendar veranDatAb, Calendar veranDatBis, Character parVerwendung, int zustandsNr, Calendar gueltigVon, Calendar igStichtag, Calendar gueltigBis, Calendar erstellDat, Calendar aktualDat, int versionsnr, Calendar zeitstempel) {
        this.id = id;
        this.inkaGueltigVon = inkaGueltigVon;
        this.inkaGueltigBis = inkaGueltigBis;
        this.istAktuellTog = istAktuellTog;
        this.erfassungsDatum = erfassungsDatum;
        this.aenderungsDatum = aenderungsDatum;
        this.stoffNr = stoffNr;
        this.stoffVersion = stoffVersion;
        this.regelwerkId = regelwerkId;
        this.gruppeDevId = gruppeDevId;
        this.variantenId = variantenId;
        this.analyseVersion = analyseVersion;
        this.masseinheitenNr = masseinheitenNr;
        this.masseinheitenVersion = masseinheitenVersion;
        this.trennNrOpt = trennNrOpt;
        this.abgaberelevantTog = abgaberelevantTog;
        this.berechnungPara = berechnungPara;
        this.frachtparTog = frachtparTog;
        this.umrechTog = umrechTog;
        this.stoffNr1 = stoffNr1;
        this.trennNr1 = trennNr1;
        this.masseinheitenNr1 = masseinheitenNr1;
        this.analyseverfPara = analyseverfPara;
        this.analyseverf1Para = analyseverf1Para;
        this.parBedingungTog = parBedingungTog;
        this.parBereichTog = parBereichTog;
        this.veranDatAb = veranDatAb;
        this.veranDatBis = veranDatBis;
        this.parVerwendung = parVerwendung;
        this.zustandsNr = zustandsNr;
        this.gueltigVon = gueltigVon;
        this.igStichtag = igStichtag;
        this.gueltigBis = gueltigBis;
        this.erstellDat = erstellDat;
        this.aktualDat = aktualDat;
        this.versionsnr = versionsnr;
        this.zeitstempel = zeitstempel;
    }

    /* Setter and getter methods */
    public DeaParameterId getId() {
        return this.id;
    }

    public void setId(DeaParameterId id) {
        this.id = id;
    }

    public Calendar getInkaGueltigVon() {
        return this.inkaGueltigVon;
    }

    public void setInkaGueltigVon(Calendar inkaGueltigVon) {
        this.inkaGueltigVon = inkaGueltigVon;
    }

    public Calendar getInkaGueltigBis() {
        return this.inkaGueltigBis;
    }

    public void setInkaGueltigBis(Calendar inkaGueltigBis) {
        this.inkaGueltigBis = inkaGueltigBis;
    }

    public short getIstAktuellTog() {
        return this.istAktuellTog;
    }

    public void setIstAktuellTog(short istAktuellTog) {
        this.istAktuellTog = istAktuellTog;
    }

    public Calendar getErfassungsDatum() {
        return this.erfassungsDatum;
    }

    public void setErfassungsDatum(Calendar erfassungsDatum) {
        this.erfassungsDatum = erfassungsDatum;
    }

    public Calendar getAenderungsDatum() {
        return this.aenderungsDatum;
    }

    public void setAenderungsDatum(Calendar aenderungsDatum) {
        this.aenderungsDatum = aenderungsDatum;
    }

    public Integer getStoffNr() {
        return this.stoffNr;
    }

    public void setStoffNr(Integer stoffNr) {
        this.stoffNr = stoffNr;
    }

    public Integer getStoffVersion() {
        return this.stoffVersion;
    }

    public void setStoffVersion(Integer stoffVersion) {
        this.stoffVersion = stoffVersion;
    }

    public String getRegelwerkId() {
        return this.regelwerkId;
    }

    public void setRegelwerkId(String regelwerkId) {
        this.regelwerkId = regelwerkId;
    }

    public String getGruppeDevId() {
        return this.gruppeDevId;
    }

    public void setGruppeDevId(String gruppeDevId) {
        this.gruppeDevId = gruppeDevId;
    }

    public Character getVariantenId() {
        return this.variantenId;
    }

    public void setVariantenId(Character variantenId) {
        this.variantenId = variantenId;
    }

    public Integer getAnalyseVersion() {
        return this.analyseVersion;
    }

    public void setAnalyseVersion(Integer analyseVersion) {
        this.analyseVersion = analyseVersion;
    }

    public Integer getMasseinheitenNr() {
        return this.masseinheitenNr;
    }

    public void setMasseinheitenNr(Integer masseinheitenNr) {
        this.masseinheitenNr = masseinheitenNr;
    }

    public Integer getMasseinheitenVersion() {
        return this.masseinheitenVersion;
    }

    public void setMasseinheitenVersion(Integer masseinheitenVersion) {
        this.masseinheitenVersion = masseinheitenVersion;
    }

    public int getTrennNrOpt() {
        return this.trennNrOpt;
    }

    public void setTrennNrOpt(int trennNrOpt) {
        this.trennNrOpt = trennNrOpt;
    }

    public Short getAbgaberelevantTog() {
        return this.abgaberelevantTog;
    }

    public void setAbgaberelevantTog(Short abgaberelevantTog) {
        this.abgaberelevantTog = abgaberelevantTog;
    }

    public String getBerechnungPara() {
        return this.berechnungPara;
    }

    public void setBerechnungPara(String berechnungPara) {
        this.berechnungPara = berechnungPara;
    }

    public Short getFrachtparTog() {
        return this.frachtparTog;
    }

    public void setFrachtparTog(Short frachtparTog) {
        this.frachtparTog = frachtparTog;
    }

    public Short getUmrechTog() {
        return this.umrechTog;
    }

    public void setUmrechTog(Short umrechTog) {
        this.umrechTog = umrechTog;
    }

    public Integer getStoffNr1() {
        return this.stoffNr1;
    }

    public void setStoffNr1(Integer stoffNr1) {
        this.stoffNr1 = stoffNr1;
    }

    public Integer getTrennNr1() {
        return this.trennNr1;
    }

    public void setTrennNr1(Integer trennNr1) {
        this.trennNr1 = trennNr1;
    }

    public Integer getMasseinheitenNr1() {
        return this.masseinheitenNr1;
    }

    public void setMasseinheitenNr1(Integer masseinheitenNr1) {
        this.masseinheitenNr1 = masseinheitenNr1;
    }

    public String getAnalyseverfPara() {
        return this.analyseverfPara;
    }

    public void setAnalyseverfPara(String analyseverfPara) {
        this.analyseverfPara = analyseverfPara;
    }

    public String getAnalyseverf1Para() {
        return this.analyseverf1Para;
    }

    public void setAnalyseverf1Para(String analyseverf1Para) {
        this.analyseverf1Para = analyseverf1Para;
    }

    public Short getParBedingungTog() {
        return this.parBedingungTog;
    }

    public void setParBedingungTog(Short parBedingungTog) {
        this.parBedingungTog = parBedingungTog;
    }

    public Short getParBereichTog() {
        return this.parBereichTog;
    }

    public void setParBereichTog(Short parBereichTog) {
        this.parBereichTog = parBereichTog;
    }

    public Calendar getVeranDatAb() {
        return this.veranDatAb;
    }

    public void setVeranDatAb(Calendar veranDatAb) {
        this.veranDatAb = veranDatAb;
    }

    public Calendar getVeranDatBis() {
        return this.veranDatBis;
    }

    public void setVeranDatBis(Calendar veranDatBis) {
        this.veranDatBis = veranDatBis;
    }

    public Character getParVerwendung() {
        return this.parVerwendung;
    }

    public void setParVerwendung(Character parVerwendung) {
        this.parVerwendung = parVerwendung;
    }

    public int getZustandsNr() {
        return this.zustandsNr;
    }

    public void setZustandsNr(int zustandsNr) {
        this.zustandsNr = zustandsNr;
    }

    public Calendar getGueltigVon() {
        return this.gueltigVon;
    }

    public void setGueltigVon(Calendar gueltigVon) {
        this.gueltigVon = gueltigVon;
    }

    public Calendar getIgStichtag() {
        return this.igStichtag;
    }

    public void setIgStichtag(Calendar igStichtag) {
        this.igStichtag = igStichtag;
    }

    public Calendar getGueltigBis() {
        return this.gueltigBis;
    }

    public void setGueltigBis(Calendar gueltigBis) {
        this.gueltigBis = gueltigBis;
    }

    public Calendar getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Calendar erstellDat) {
        this.erstellDat = erstellDat;
    }

    public Calendar getAktualDat() {
        return this.aktualDat;
    }

    public void setAktualDat(Calendar aktualDat) {
        this.aktualDat = aktualDat;
    }

    public int getVersionsnr() {
        return this.versionsnr;
    }

    public void setVersionsnr(int versionsnr) {
        this.versionsnr = versionsnr;
    }

    public Calendar getZeitstempel() {
        return this.zeitstempel;
    }

    public void setZeitstempel(Calendar zeitstempel) {
        this.zeitstempel = zeitstempel;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>DeaParameter</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static DeaParameter merge(DeaParameter detachedInstance) {
        log.debug("Merging DeaParameter instance " + detachedInstance);
        return (DeaParameter) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        return DeaParameter.merge(this).equals(this);
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(DeaParameter detachedInstance) {
        log.debug("Deleting DeaParameter instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return DeaParameter.delete(this);
    }

    /**
     * Find an <code>DeaParameter</code> instance by its primary key
     * @param id the primary key value
     * @return <code>DeaParameter</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static DeaParameter findById(de.bielefeld.umweltamt.aui.mappings.generated.tipi.DeaParameterId id) {
        log.debug("Getting DeaParameter instance with id: " + id);
        return (DeaParameter)
            new DatabaseAccess().get(DeaParameter.class, id);
    }

    /**
     * Get a list of all <code>DeaParameter</code>
     * @return <code>List&lt;DeaParameter&gt;</code>
     *         all <code>DeaParameter</code>
     */
    public static List<DeaParameter> getAll() {
        log.debug("Getting all DeaParameter instances");
        String query = "FROM DeaParameter";
        List<?> objectList = new DatabaseAccess().createQuery(query).list(); 
        List<DeaParameter> resultList = new ArrayList<DeaParameter>();
        DeaParameter result = null;
        for (Object object : objectList) {
            result = (DeaParameter) object;
            resultList.add(result); 
        }
        return resultList;
    }

    /* Custom code goes below here! */

}
