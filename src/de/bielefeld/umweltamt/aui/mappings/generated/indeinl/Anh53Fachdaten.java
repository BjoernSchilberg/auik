/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 3.3.0.GA

package de.bielefeld.umweltamt.aui.mappings.generated.indeinl;

import de.bielefeld.umweltamt.aui.mappings.generated.basis.BasisObjekt;
import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import de.bielefeld.umweltamt.aui.utils.DatabaseAccess;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

/**
 * A class that represents a row in the Anh53Fachdaten database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class Anh53Fachdaten  implements java.io.Serializable {

    /* Primary key, foreign keys (relations) and table columns */
    private int objektid;
    private BasisObjekt basisObjekt;
    private String branche;
    private String verfahren;
    private Calendar antragsdatum;
    private Boolean bagatell;
    private Calendar bagatelldatum;
    private Calendar genehmigungsdatum;
    private Calendar genehmigungaufgehoben;
    private Calendar abnahmedatum;
    private String genehmigungstitel;
    private Boolean genehmigung;
    private Integer durchsatz;
    private Integer gesamtmengeEb;
    private Boolean onlineentsilberung;
    private Boolean abwasser;
    private Calendar abwasserfrei;
    private Calendar kleiner200qm;
    private Boolean betriebAbgemeldet;
    private String bemerkungen;
    private Boolean betriebstagebuch;
    private Boolean wasseruhr;
    private Integer spuelwassermenge;
    private Integer spuelwasserverbrauch;
    private Boolean wartungsvertrag;
    private Boolean grgen;
    private String genart;
    private boolean enabled;
    private boolean deleted;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public Anh53Fachdaten() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public Anh53Fachdaten(
        BasisObjekt basisObjekt, boolean enabled, boolean deleted) {
        this.basisObjekt = basisObjekt;
        this.enabled = enabled;
        this.deleted = deleted;
    }

    /** Full constructor */
    public Anh53Fachdaten(
        BasisObjekt basisObjekt, String branche, String verfahren, Calendar antragsdatum, Boolean bagatell, Calendar bagatelldatum, Calendar genehmigungsdatum, Calendar genehmigungaufgehoben, Calendar abnahmedatum, String genehmigungstitel, Boolean genehmigung, Integer durchsatz, Integer gesamtmengeEb, Boolean onlineentsilberung, Boolean abwasser, Calendar abwasserfrei, Calendar kleiner200qm, Boolean betriebAbgemeldet, String bemerkungen, Boolean betriebstagebuch, Boolean wasseruhr, Integer spuelwassermenge, Integer spuelwasserverbrauch, Boolean wartungsvertrag, Boolean grgen, String genart, boolean enabled, boolean deleted) {
        this.basisObjekt = basisObjekt;
        this.branche = branche;
        this.verfahren = verfahren;
        this.antragsdatum = antragsdatum;
        this.bagatell = bagatell;
        this.bagatelldatum = bagatelldatum;
        this.genehmigungsdatum = genehmigungsdatum;
        this.genehmigungaufgehoben = genehmigungaufgehoben;
        this.abnahmedatum = abnahmedatum;
        this.genehmigungstitel = genehmigungstitel;
        this.genehmigung = genehmigung;
        this.durchsatz = durchsatz;
        this.gesamtmengeEb = gesamtmengeEb;
        this.onlineentsilberung = onlineentsilberung;
        this.abwasser = abwasser;
        this.abwasserfrei = abwasserfrei;
        this.kleiner200qm = kleiner200qm;
        this.betriebAbgemeldet = betriebAbgemeldet;
        this.bemerkungen = bemerkungen;
        this.betriebstagebuch = betriebstagebuch;
        this.wasseruhr = wasseruhr;
        this.spuelwassermenge = spuelwassermenge;
        this.spuelwasserverbrauch = spuelwasserverbrauch;
        this.wartungsvertrag = wartungsvertrag;
        this.grgen = grgen;
        this.genart = genart;
        this.enabled = enabled;
        this.deleted = deleted;
    }

    /* Setter and getter methods */
    public int getObjektid() {
        return this.objektid;
    }

    public void setObjektid(int objektid) {
        this.objektid = objektid;
    }

    public BasisObjekt getBasisObjekt() {
        return this.basisObjekt;
    }

    public void setBasisObjekt(BasisObjekt basisObjekt) {
        this.basisObjekt = basisObjekt;
    }

    public String getBranche() {
        return this.branche;
    }

    public void setBranche(String branche) {
        this.branche = branche;
    }

    public String getVerfahren() {
        return this.verfahren;
    }

    public void setVerfahren(String verfahren) {
        this.verfahren = verfahren;
    }

    public Calendar getAntragsdatum() {
        return this.antragsdatum;
    }

    public void setAntragsdatum(Calendar antragsdatum) {
        this.antragsdatum = antragsdatum;
    }

    public Boolean getBagatell() {
        return this.bagatell;
    }

    public void setBagatell(Boolean bagatell) {
        this.bagatell = bagatell;
    }

    public Calendar getBagatelldatum() {
        return this.bagatelldatum;
    }

    public void setBagatelldatum(Calendar bagatelldatum) {
        this.bagatelldatum = bagatelldatum;
    }

    public Calendar getGenehmigungsdatum() {
        return this.genehmigungsdatum;
    }

    public void setGenehmigungsdatum(Calendar genehmigungsdatum) {
        this.genehmigungsdatum = genehmigungsdatum;
    }

    public Calendar getGenehmigungaufgehoben() {
        return this.genehmigungaufgehoben;
    }

    public void setGenehmigungaufgehoben(Calendar genehmigungaufgehoben) {
        this.genehmigungaufgehoben = genehmigungaufgehoben;
    }

    public Calendar getAbnahmedatum() {
        return this.abnahmedatum;
    }

    public void setAbnahmedatum(Calendar abnahmedatum) {
        this.abnahmedatum = abnahmedatum;
    }

    public String getGenehmigungstitel() {
        return this.genehmigungstitel;
    }

    public void setGenehmigungstitel(String genehmigungstitel) {
        this.genehmigungstitel = genehmigungstitel;
    }

    public Boolean getGenehmigung() {
        return this.genehmigung;
    }

    public void setGenehmigung(Boolean genehmigung) {
        this.genehmigung = genehmigung;
    }

    public Integer getDurchsatz() {
        return this.durchsatz;
    }

    public void setDurchsatz(Integer durchsatz) {
        this.durchsatz = durchsatz;
    }

    public Integer getGesamtmengeEb() {
        return this.gesamtmengeEb;
    }

    public void setGesamtmengeEb(Integer gesamtmengeEb) {
        this.gesamtmengeEb = gesamtmengeEb;
    }

    public Boolean getOnlineentsilberung() {
        return this.onlineentsilberung;
    }

    public void setOnlineentsilberung(Boolean onlineentsilberung) {
        this.onlineentsilberung = onlineentsilberung;
    }

    public Boolean getAbwasser() {
        return this.abwasser;
    }

    public void setAbwasser(Boolean abwasser) {
        this.abwasser = abwasser;
    }

    public Calendar getAbwasserfrei() {
        return this.abwasserfrei;
    }

    public void setAbwasserfrei(Calendar abwasserfrei) {
        this.abwasserfrei = abwasserfrei;
    }

    public Calendar getKleiner200qm() {
        return this.kleiner200qm;
    }

    public void setKleiner200qm(Calendar kleiner200qm) {
        this.kleiner200qm = kleiner200qm;
    }

    public Boolean getBetriebAbgemeldet() {
        return this.betriebAbgemeldet;
    }

    public void setBetriebAbgemeldet(Boolean betriebAbgemeldet) {
        this.betriebAbgemeldet = betriebAbgemeldet;
    }

    public String getBemerkungen() {
        return this.bemerkungen;
    }

    public void setBemerkungen(String bemerkungen) {
        this.bemerkungen = bemerkungen;
    }

    public Boolean getBetriebstagebuch() {
        return this.betriebstagebuch;
    }

    public void setBetriebstagebuch(Boolean betriebstagebuch) {
        this.betriebstagebuch = betriebstagebuch;
    }

    public Boolean getWasseruhr() {
        return this.wasseruhr;
    }

    public void setWasseruhr(Boolean wasseruhr) {
        this.wasseruhr = wasseruhr;
    }

    public Integer getSpuelwassermenge() {
        return this.spuelwassermenge;
    }

    public void setSpuelwassermenge(Integer spuelwassermenge) {
        this.spuelwassermenge = spuelwassermenge;
    }

    public Integer getSpuelwasserverbrauch() {
        return this.spuelwasserverbrauch;
    }

    public void setSpuelwasserverbrauch(Integer spuelwasserverbrauch) {
        this.spuelwasserverbrauch = spuelwasserverbrauch;
    }

    public Boolean getWartungsvertrag() {
        return this.wartungsvertrag;
    }

    public void setWartungsvertrag(Boolean wartungsvertrag) {
        this.wartungsvertrag = wartungsvertrag;
    }

    public Boolean getGrgen() {
        return this.grgen;
    }

    public void setGrgen(Boolean grgen) {
        this.grgen = grgen;
    }

    public String getGenart() {
        return this.genart;
    }

    public void setGenart(String genart) {
        this.genart = genart;
    }

    public boolean isEnabled() {
        return this.enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public boolean isDeleted() {
        return this.deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>Anh53Fachdaten</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static Anh53Fachdaten merge(Anh53Fachdaten detachedInstance) {
        log.debug("Merging Anh53Fachdaten instance " + detachedInstance);
        return (Anh53Fachdaten) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        return Anh53Fachdaten.merge(this).equals(this);
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(Anh53Fachdaten detachedInstance) {
        log.debug("Deleting Anh53Fachdaten instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return Anh53Fachdaten.delete(this);
    }

    /**
     * Find an <code>Anh53Fachdaten</code> instance by its primary key
     * @param id the primary key value
     * @return <code>Anh53Fachdaten</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static Anh53Fachdaten findById(int id) {
        log.debug("Getting Anh53Fachdaten instance with id: " + id);
        return (Anh53Fachdaten)
            new DatabaseAccess().get(Anh53Fachdaten.class, id);
    }

    /**
     * Get a list of all <code>Anh53Fachdaten</code>
     * @return <code>List&lt;Anh53Fachdaten&gt;</code>
     *         all <code>Anh53Fachdaten</code>
     */
    public static List<Anh53Fachdaten> getAll() {
        log.debug("Getting all Anh53Fachdaten instances");
        String query = "FROM Anh53Fachdaten";
        List<?> objectList = new DatabaseAccess().createQuery(query).list(); 
        List<Anh53Fachdaten> resultList = new ArrayList<Anh53Fachdaten>();
        Anh53Fachdaten result = null;
        for (Object object : objectList) {
            result = (Anh53Fachdaten) object;
            resultList.add(result); 
        }
        return resultList;
    }

    /* Custom code goes below here! */

}
