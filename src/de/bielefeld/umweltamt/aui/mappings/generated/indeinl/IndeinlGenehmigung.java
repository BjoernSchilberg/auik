/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 3.3.0.GA

package de.bielefeld.umweltamt.aui.mappings.generated.indeinl;

import de.bielefeld.umweltamt.aui.mappings.generated.basis.BasisObjekt;
import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import de.bielefeld.umweltamt.aui.utils.DatabaseAccess;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

/**
 * A class that represents a row in the IndeinlGenehmigung database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class IndeinlGenehmigung  implements java.io.Serializable {

    /* Primary key, foreign keys (relations) and table columns */
    private int objektid;
    private BasisObjekt basisObjekt;
    private String bemerkungen;
    private Calendar erstellungsDatum;
    private Calendar aenderungsDatum;
    private Calendar antragDatum;
    private Boolean befristet;
    private Calendar befristetBis;
    private Integer anhang;
    private Integer genMenge;
    private Boolean gen58;
    private Boolean gen59;
    private Boolean selbstueberw;
    private Boolean ESatzung;
    private boolean enabled;
    private boolean deleted;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public IndeinlGenehmigung() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public IndeinlGenehmigung(
        BasisObjekt basisObjekt, boolean enabled, boolean deleted) {
        this.basisObjekt = basisObjekt;
        this.enabled = enabled;
        this.deleted = deleted;
    }

    /** Full constructor */
    public IndeinlGenehmigung(
        BasisObjekt basisObjekt, String bemerkungen, Calendar erstellungsDatum, Calendar aenderungsDatum, Calendar antragDatum, Boolean befristet, Calendar befristetBis, Integer anhang, Integer genMenge, Boolean gen58, Boolean gen59, Boolean selbstueberw, Boolean ESatzung, boolean enabled, boolean deleted) {
        this.basisObjekt = basisObjekt;
        this.bemerkungen = bemerkungen;
        this.erstellungsDatum = erstellungsDatum;
        this.aenderungsDatum = aenderungsDatum;
        this.antragDatum = antragDatum;
        this.befristet = befristet;
        this.befristetBis = befristetBis;
        this.anhang = anhang;
        this.genMenge = genMenge;
        this.gen58 = gen58;
        this.gen59 = gen59;
        this.selbstueberw = selbstueberw;
        this.ESatzung = ESatzung;
        this.enabled = enabled;
        this.deleted = deleted;
    }

    /* Setter and getter methods */
    public int getObjektid() {
        return this.objektid;
    }

    public void setObjektid(int objektid) {
        this.objektid = objektid;
    }

    public BasisObjekt getBasisObjekt() {
        return this.basisObjekt;
    }

    public void setBasisObjekt(BasisObjekt basisObjekt) {
        this.basisObjekt = basisObjekt;
    }

    public String getBemerkungen() {
        return this.bemerkungen;
    }

    public void setBemerkungen(String bemerkungen) {
        this.bemerkungen = bemerkungen;
    }

    public Calendar getErstellungsDatum() {
        return this.erstellungsDatum;
    }

    public void setErstellungsDatum(Calendar erstellungsDatum) {
        this.erstellungsDatum = erstellungsDatum;
    }

    public Calendar getAenderungsDatum() {
        return this.aenderungsDatum;
    }

    public void setAenderungsDatum(Calendar aenderungsDatum) {
        this.aenderungsDatum = aenderungsDatum;
    }

    public Calendar getAntragDatum() {
        return this.antragDatum;
    }

    public void setAntragDatum(Calendar antragDatum) {
        this.antragDatum = antragDatum;
    }

    public Boolean getBefristet() {
        return this.befristet;
    }

    public void setBefristet(Boolean befristet) {
        this.befristet = befristet;
    }

    public Calendar getBefristetBis() {
        return this.befristetBis;
    }

    public void setBefristetBis(Calendar befristetBis) {
        this.befristetBis = befristetBis;
    }

    public Integer getAnhang() {
        return this.anhang;
    }

    public void setAnhang(Integer anhang) {
        this.anhang = anhang;
    }

    public Integer getGenMenge() {
        return this.genMenge;
    }

    public void setGenMenge(Integer genMenge) {
        this.genMenge = genMenge;
    }

    public Boolean getGen58() {
        return this.gen58;
    }

    public void setGen58(Boolean gen58) {
        this.gen58 = gen58;
    }

    public Boolean getGen59() {
        return this.gen59;
    }

    public void setGen59(Boolean gen59) {
        this.gen59 = gen59;
    }

    public Boolean getSelbstueberw() {
        return this.selbstueberw;
    }

    public void setSelbstueberw(Boolean selbstueberw) {
        this.selbstueberw = selbstueberw;
    }

    public Boolean getESatzung() {
        return this.ESatzung;
    }

    public void setESatzung(Boolean ESatzung) {
        this.ESatzung = ESatzung;
    }

    public boolean isEnabled() {
        return this.enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public boolean isDeleted() {
        return this.deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>IndeinlGenehmigung</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static IndeinlGenehmigung merge(IndeinlGenehmigung detachedInstance) {
        log.debug("Merging IndeinlGenehmigung instance " + detachedInstance);
        return (IndeinlGenehmigung) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        return IndeinlGenehmigung.merge(this).equals(this);
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(IndeinlGenehmigung detachedInstance) {
        log.debug("Deleting IndeinlGenehmigung instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return IndeinlGenehmigung.delete(this);
    }

    /**
     * Find an <code>IndeinlGenehmigung</code> instance by its primary key
     * @param id the primary key value
     * @return <code>IndeinlGenehmigung</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static IndeinlGenehmigung findById(int id) {
        log.debug("Getting IndeinlGenehmigung instance with id: " + id);
        return (IndeinlGenehmigung)
            new DatabaseAccess().get(IndeinlGenehmigung.class, id);
    }

    /**
     * Get a list of all <code>IndeinlGenehmigung</code>
     * @return <code>List&lt;IndeinlGenehmigung&gt;</code>
     *         all <code>IndeinlGenehmigung</code>
     */
    public static List<IndeinlGenehmigung> getAll() {
        log.debug("Getting all IndeinlGenehmigung instances");
        String query = "FROM IndeinlGenehmigung";
        List<?> objectList = new DatabaseAccess().createQuery(query).list(); 
        List<IndeinlGenehmigung> resultList = new ArrayList<IndeinlGenehmigung>();
        IndeinlGenehmigung result = null;
        for (Object object : objectList) {
            result = (IndeinlGenehmigung) object;
            resultList.add(result); 
        }
        return resultList;
    }

    /* Custom code goes below here! */

}
