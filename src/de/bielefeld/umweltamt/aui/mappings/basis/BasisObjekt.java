/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 5.0.0.Final

package de.bielefeld.umweltamt.aui.mappings.basis;

import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseClassToString;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;
import de.bielefeld.umweltamt.aui.mappings.DatabaseSerialVersionUID;
import de.bielefeld.umweltamt.aui.mappings.atl.AtlProbepkt;
import de.bielefeld.umweltamt.aui.mappings.atl.AtlSielhaut;
import de.bielefeld.umweltamt.aui.mappings.elka.ElkaAba;
import de.bielefeld.umweltamt.aui.mappings.elka.ElkaAnfallstelle;
import de.bielefeld.umweltamt.aui.mappings.elka.ElkaEinleitungsstelle;
import de.bielefeld.umweltamt.aui.mappings.elka.ElkaWasserrecht;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh40Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh49Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh50Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh52Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh53Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh55Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.Anh56Fachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.AnhBwkFachdaten;
import de.bielefeld.umweltamt.aui.mappings.indeinl.AnhSuevFachdaten;
import de.bielefeld.umweltamt.aui.mappings.vaws.VawsFachdaten;
import de.bielefeld.umweltamt.aui.utils.AuikLogger;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * A class that represents a row in the BasisObjekt database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class BasisObjekt  implements java.io.Serializable {

    /** Generated serialVersionUID for Serializable interface */
    private static final long serialVersionUID =
        DatabaseSerialVersionUID.forBasisObjekt;
    
    /* Primary key, foreign keys (relations) and table columns */
    private Integer id;
    private BasisAdresse basisAdresse;
    private BasisAdresse basisStandort;
    private BasisLage basisLage;
    private BasisObjektarten basisObjektarten;
    private BasisSachbearbeiter basisSachbearbeiter;
    private Integer uschistdid;
    private String beschreibung;
    private Date wiedervorlage;
    private Date erfassungsdatum;
    private Date gueltigVon;
    private Date aenderungsdatum;
    private Date gueltigBis;
    private boolean inaktiv;
    private String prioritaet;
    private boolean enabled;
    private boolean deleted;
    private Boolean abwasserfrei;
    private Set<ElkaWasserrecht> elkaWasserrechts = new HashSet<ElkaWasserrecht>(0);
    private Set<ElkaAba> elkaAbas = new HashSet<ElkaAba>(0);
    private Set<ElkaAnfallstelle> elkaAnfallstelles = new HashSet<ElkaAnfallstelle>(0);
    private Set<ElkaEinleitungsstelle> elkaEinleitungsstelles = new HashSet<ElkaEinleitungsstelle>(0);
    private Set<Anh53Fachdaten> anh53Fachdatens = new HashSet<Anh53Fachdaten>(0);
    private Set<AnhSuevFachdaten> anhSuevFachdatens = new HashSet<AnhSuevFachdaten>(0);
    private Set<AnhBwkFachdaten> anhBwkFachdatens = new HashSet<AnhBwkFachdaten>(0);
    private Set<AtlProbepkt> atlProbepkts = new HashSet<AtlProbepkt>(0);
    private Set<BasisObjektverknuepfung> basisObjektverknuepfungsForObjekt = new HashSet<BasisObjektverknuepfung>(0);
    private Set<VawsFachdaten> vawsFachdatens = new HashSet<VawsFachdaten>(0);
    private Set<Anh55Fachdaten> anh55Fachdatens = new HashSet<Anh55Fachdaten>(0);
    private Set<Anh52Fachdaten> anh52Fachdatens = new HashSet<Anh52Fachdaten>(0);
    private Set<Anh56Fachdaten> anh56Fachdatens = new HashSet<Anh56Fachdaten>(0);
    private Set<BasisObjektverknuepfung> basisObjektverknuepfungsForIstVerknuepftMit = new HashSet<BasisObjektverknuepfung>(0);
    private Set<Anh40Fachdaten> anh40Fachdatens = new HashSet<Anh40Fachdaten>(0);
    private Set<BasisObjektchrono> basisObjektchronos = new HashSet<BasisObjektchrono>(0);
    private AtlSielhaut atlSielhaut;
    private Set<Anh49Fachdaten> anh49Fachdatens = new HashSet<Anh49Fachdaten>(0);
    private Set<Anh50Fachdaten> anh50Fachdatens = new HashSet<Anh50Fachdaten>(0);

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public BasisObjekt() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public BasisObjekt(
        boolean inaktiv, boolean enabled, boolean deleted) {
        this.inaktiv = inaktiv;
        this.enabled = enabled;
        this.deleted = deleted;
    }

    /** Full constructor */
    public BasisObjekt(
        BasisAdresse basisStandort, BasisAdresse basisAdresse, BasisLage basisLage, BasisObjektarten basisObjektarten, BasisSachbearbeiter basisSachbearbeiter, Integer uschistdid, String beschreibung, Date wiedervorlage, Date erfassungsdatum, Date gueltigVon, Date aenderungsdatum, Date gueltigBis, boolean inaktiv, String prioritaet, boolean enabled, boolean deleted, Boolean abwasserfrei, Set<ElkaAba> elkaAbas, Set<ElkaWasserrecht> elkaWasserrechts, Set<Anh53Fachdaten> anh53Fachdatens, Set<AnhSuevFachdaten> anhSuevFachdatens, Set<AnhBwkFachdaten> anhBwkFachdatens, Set<AtlProbepkt> atlProbepkts, Set<BasisObjektverknuepfung> basisObjektverknuepfungsForObjekt, Set<VawsFachdaten> vawsFachdatens, Set<Anh55Fachdaten> anh55Fachdatens, Set<Anh52Fachdaten> anh52Fachdatens, Set<Anh56Fachdaten> anh56Fachdatens, Set<BasisObjektverknuepfung> basisObjektverknuepfungsForIstVerknuepftMit, Set<Anh40Fachdaten> anh40Fachdatens, Set<BasisObjektchrono> basisObjektchronos, AtlSielhaut atlSielhaut, Set<Anh49Fachdaten> anh49Fachdatens, Set<Anh50Fachdaten> anh50Fachdatens) {
        this.basisStandort = basisStandort;
        this.basisAdresse = basisAdresse;
        this.basisLage = basisLage;
        this.basisObjektarten = basisObjektarten;
        this.basisSachbearbeiter = basisSachbearbeiter;
        this.uschistdid = uschistdid;
        this.beschreibung = beschreibung;
        this.wiedervorlage = wiedervorlage;
        this.erfassungsdatum = erfassungsdatum;
        this.gueltigVon = gueltigVon;
        this.aenderungsdatum = aenderungsdatum;
        this.gueltigBis = gueltigBis;
        this.inaktiv = inaktiv;
        this.prioritaet = prioritaet;
        this.enabled = enabled;
        this.deleted = deleted;
        this.abwasserfrei = abwasserfrei;
        this.elkaWasserrechts = elkaWasserrechts;
        this.elkaAbas = elkaAbas;
        this.anh53Fachdatens = anh53Fachdatens;
        this.anhSuevFachdatens = anhSuevFachdatens;
        this.anhBwkFachdatens = anhBwkFachdatens;
        this.atlProbepkts = atlProbepkts;
        this.basisObjektverknuepfungsForObjekt = basisObjektverknuepfungsForObjekt;
        this.vawsFachdatens = vawsFachdatens;
        this.anh55Fachdatens = anh55Fachdatens;
        this.anh52Fachdatens = anh52Fachdatens;
        this.anh56Fachdatens = anh56Fachdatens;
        this.basisObjektverknuepfungsForIstVerknuepftMit = basisObjektverknuepfungsForIstVerknuepftMit;
        this.anh40Fachdatens = anh40Fachdatens;
        this.basisObjektchronos = basisObjektchronos;
        this.atlSielhaut = atlSielhaut;
        this.anh49Fachdatens = anh49Fachdatens;
        this.anh50Fachdatens = anh50Fachdatens;
    }

    /* Setter and getter methods */
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public BasisAdresse getBasisStandort(){
        return this.basisStandort;
    }

    public void setBasisStandort(BasisAdresse basisStandort){
        this.basisStandort = basisStandort;
    }

    public BasisAdresse getBasisAdresse() {
        return this.basisAdresse;
    }

    public void setBasisAdresse(BasisAdresse basisAdresse) {
        this.basisAdresse = basisAdresse;
    }

    public BasisLage getBasisLage() {
        return this.basisLage;
    }

    public void setBasisLage(BasisLage basisLage) {
        this.basisLage = basisLage;
    }

    public BasisObjektarten getBasisObjektarten() {
        return this.basisObjektarten;
    }

    public void setBasisObjektarten(BasisObjektarten basisObjektarten) {
        this.basisObjektarten = basisObjektarten;
    }

    public BasisSachbearbeiter getBasisSachbearbeiter() {
        return this.basisSachbearbeiter;
    }

    public void setBasisSachbearbeiter(BasisSachbearbeiter basisSachbearbeiter) {
        this.basisSachbearbeiter = basisSachbearbeiter;
    }

    public Integer getUschistdid() {
        return this.uschistdid;
    }

    public void setUschistdid(Integer uschistdid) {
        this.uschistdid = uschistdid;
    }

    public String getBeschreibung() {
        return this.beschreibung;
    }

    public void setBeschreibung(String beschreibung) {
        this.beschreibung = beschreibung;
    }

    public Date getWiedervorlage() {
        return this.wiedervorlage;
    }

    public void setWiedervorlage(Date wiedervorlage) {
        this.wiedervorlage = wiedervorlage;
    }

    public Date getErfassungsdatum() {
        return this.erfassungsdatum;
    }

    public void setErfassungsdatum(Date erfassungsdatum) {
        this.erfassungsdatum = erfassungsdatum;
    }

    public Date getGueltigVon() {
        return this.gueltigVon;
    }

    public void setGueltigVon(Date gueltigVon) {
        this.gueltigVon = gueltigVon;
    }

    public Date getAenderungsdatum() {
        return this.aenderungsdatum;
    }

    public void setAenderungsdatum(Date aenderungsdatum) {
        this.aenderungsdatum = aenderungsdatum;
    }

    public Date getGueltigBis() {
        return this.gueltigBis;
    }

    public void setGueltigBis(Date gueltigBis) {
        this.gueltigBis = gueltigBis;
    }

    public boolean isInaktiv() {
        return this.inaktiv;
    }

    public void setInaktiv(boolean inaktiv) {
        this.inaktiv = inaktiv;
    }

    public String getPrioritaet() {
        return this.prioritaet;
    }

    public void setPrioritaet(String prioritaet) {
        this.prioritaet = prioritaet;
    }

    public boolean isEnabled() {
        return this.enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public boolean isDeleted() {
        return this.deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    public Boolean getAbwasserfrei() {
        return this.abwasserfrei;
    }

    public void setAbwasserfrei(Boolean abwasserfrei) {
        this.abwasserfrei = abwasserfrei;
    }

    public Set<ElkaWasserrecht> getElkaWasserrechts() {
        return this.elkaWasserrechts;
    }

    public void setElkaWasserrechts(Set<ElkaWasserrecht> elkaWasserrechts) {
		this.elkaWasserrechts = elkaWasserrechts;
    }

    public Set<ElkaAba> getElkaAbas() {
        return this.elkaAbas;
    }

    public void setElkaAbas(Set<ElkaAba> elkaAbas) {
		this.elkaAbas = elkaAbas;
    }

    public Set<ElkaAnfallstelle> getElkaAnfallstelles() {
        return this.elkaAnfallstelles;
    }

    public void setElkaAnfallstelles(Set<ElkaAnfallstelle> elkaAnfallstelles) {
		this.elkaAnfallstelles = elkaAnfallstelles;
    }

    public Set<ElkaEinleitungsstelle> getElkaEinleitungsstelles() {
        return this.elkaEinleitungsstelles;
    }

    public void setElkaEinleitungsstelles(Set<ElkaEinleitungsstelle> elkaEinleitungsstelles) {
		this.elkaEinleitungsstelles = elkaEinleitungsstelles;
    }

    public Set<Anh53Fachdaten> getAnh53Fachdatens() {
        return this.anh53Fachdatens;
    }

    public void setAnh53Fachdatens(Set<Anh53Fachdaten> anh53Fachdatens) {
        this.anh53Fachdatens = anh53Fachdatens;
    }

    public Set<AnhSuevFachdaten> getAnhSuevFachdatens() {
        return this.anhSuevFachdatens;
    }

    public void setAnhSuevFachdatens(Set<AnhSuevFachdaten> anhSuevFachdatens) {
        this.anhSuevFachdatens = anhSuevFachdatens;
    }

    public Set<AnhBwkFachdaten> getAnhBwkFachdatens() {
        return this.anhBwkFachdatens;
    }

    public void setAnhBwkFachdatens(Set<AnhBwkFachdaten> anhBwkFachdatens) {
        this.anhBwkFachdatens = anhBwkFachdatens;
    }

    public Set<AtlProbepkt> getAtlProbepkts() {
        return this.atlProbepkts;
    }

    public void setAtlProbepkts(Set<AtlProbepkt> atlProbepkts) {
        this.atlProbepkts = atlProbepkts;
    }

    public Set<BasisObjektverknuepfung> getBasisObjektverknuepfungsForObjekt() {
        return this.basisObjektverknuepfungsForObjekt;
    }

    public void setBasisObjektverknuepfungsForObjekt(Set<BasisObjektverknuepfung> basisObjektverknuepfungsForObjekt) {
        this.basisObjektverknuepfungsForObjekt = basisObjektverknuepfungsForObjekt;
    }

    public Set<VawsFachdaten> getVawsFachdatens() {
        return this.vawsFachdatens;
    }

    public void setVawsFachdatens(Set<VawsFachdaten> vawsFachdatens) {
        this.vawsFachdatens = vawsFachdatens;
    }

    public Set<Anh55Fachdaten> getAnh55Fachdatens() {
        return this.anh55Fachdatens;
    }

    public void setAnh55Fachdatens(Set<Anh55Fachdaten> anh55Fachdatens) {
        this.anh55Fachdatens = anh55Fachdatens;
    }

    public Set<Anh52Fachdaten> getAnh52Fachdatens() {
        return this.anh52Fachdatens;
    }

    public void setAnh52Fachdatens(Set<Anh52Fachdaten> anh52Fachdatens) {
        this.anh52Fachdatens = anh52Fachdatens;
    }

    public Set<Anh56Fachdaten> getAnh56Fachdatens() {
        return this.anh56Fachdatens;
    }

    public void setAnh56Fachdatens(Set<Anh56Fachdaten> anh56Fachdatens) {
        this.anh56Fachdatens = anh56Fachdatens;
    }

    public Set<BasisObjektverknuepfung> getBasisObjektverknuepfungsForIstVerknuepftMit() {
        return this.basisObjektverknuepfungsForIstVerknuepftMit;
    }

    public void setBasisObjektverknuepfungsForIstVerknuepftMit(Set<BasisObjektverknuepfung> basisObjektverknuepfungsForIstVerknuepftMit) {
        this.basisObjektverknuepfungsForIstVerknuepftMit = basisObjektverknuepfungsForIstVerknuepftMit;
    }

    public Set<Anh40Fachdaten> getAnh40Fachdatens() {
        return this.anh40Fachdatens;
    }

    public void setAnh40Fachdatens(Set<Anh40Fachdaten> anh40Fachdatens) {
        this.anh40Fachdatens = anh40Fachdatens;
    }

    public Set<BasisObjektchrono> getBasisObjektchronos() {
        return this.basisObjektchronos;
    }

    public void setBasisObjektchronos(Set<BasisObjektchrono> basisObjektchronos) {
        this.basisObjektchronos = basisObjektchronos;
    }

    public AtlSielhaut getAtlSielhaut() {
        return this.atlSielhaut;
    }

    public void setAtlSielhaut(AtlSielhaut atlSielhaut) {
        this.atlSielhaut = atlSielhaut;
    }

    public Set<Anh49Fachdaten> getAnh49Fachdatens() {
        return this.anh49Fachdatens;
    }

    public void setAnh49Fachdatens(Set<Anh49Fachdaten> anh49Fachdatens) {
        this.anh49Fachdatens = anh49Fachdatens;
    }

    public Set<Anh50Fachdaten> getAnh50Fachdatens() {
        return this.anh50Fachdatens;
    }

    public void setAnh50Fachdatens(Set<Anh50Fachdaten> anh50Fachdatens) {
        this.anh50Fachdatens = anh50Fachdatens;
    }

    /**
     * To implement custom toString methods, jump to not generated code.<br>
     * Basically we either call on <code>toDebugString</code> for a debug
     * string, call on <code>toGuiString</code> for a gui representation or do
     * something completely different.
     * @return String
     */
    @Override
    public String toString() {
        return DatabaseClassToString.toStringForClass(this); 
    }

    /**
     * Get a string representation for debugging
     * @return String
     */
    public String toDebugString() {
        StringBuffer buffer = new StringBuffer();
        
        buffer.append(getClass().getSimpleName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
        buffer.append("basisStandort").append("='").append(getBasisStandort()).append("' ");
        buffer.append("basisAdresse").append("='").append(getBasisAdresse()).append("' ");			
        buffer.append("basisLage").append("='").append(getBasisLage()).append("' ");			
        buffer.append("basisObjektarten").append("='").append(getBasisObjektarten()).append("' ");			
        buffer.append("basisSachbearbeiter").append("='").append(getBasisSachbearbeiter()).append("' ");			
        buffer.append("uschistdid").append("='").append(getUschistdid()).append("' ");			
        buffer.append("beschreibung").append("='").append(getBeschreibung()).append("' ");			
        buffer.append("wiedervorlage").append("='").append(getWiedervorlage()).append("' ");			
        buffer.append("erfassungsdatum").append("='").append(getErfassungsdatum()).append("' ");			
        buffer.append("gueltigVon").append("='").append(getGueltigVon()).append("' ");			
        buffer.append("aenderungsdatum").append("='").append(getAenderungsdatum()).append("' ");			
        buffer.append("gueltigBis").append("='").append(getGueltigBis()).append("' ");			
        buffer.append("inaktiv").append("='").append(isInaktiv()).append("' ");			
        buffer.append("prioritaet").append("='").append(getPrioritaet()).append("' ");			
        buffer.append("enabled").append("='").append(isEnabled()).append("' ");			
        buffer.append("deleted").append("='").append(isDeleted()).append("' ");			
        buffer.append("abwasserfrei").append("='").append(getAbwasserfrei()).append("' ");			
        buffer.append("basisWasserrechts").append("='").append(getElkaWasserrechts()).append("' ");			
        buffer.append("anh53Fachdatens").append("='").append(getAnh53Fachdatens()).append("' ");			
        buffer.append("anhSuevFachdatens").append("='").append(getAnhSuevFachdatens()).append("' ");			
        buffer.append("anhBwkFachdatens").append("='").append(getAnhBwkFachdatens()).append("' ");			
        buffer.append("atlProbepkts").append("='").append(getAtlProbepkts()).append("' ");			
        buffer.append("basisObjektverknuepfungsForObjekt").append("='").append(getBasisObjektverknuepfungsForObjekt()).append("' ");			
        buffer.append("vawsFachdatens").append("='").append(getVawsFachdatens()).append("' ");			
        buffer.append("anh55Fachdatens").append("='").append(getAnh55Fachdatens()).append("' ");			
        buffer.append("anh52Fachdatens").append("='").append(getAnh52Fachdatens()).append("' ");			
        buffer.append("anh56Fachdatens").append("='").append(getAnh56Fachdatens()).append("' ");			
        buffer.append("basisObjektverknuepfungsForIstVerknuepftMit").append("='").append(getBasisObjektverknuepfungsForIstVerknuepftMit()).append("' ");			
        buffer.append("anh40Fachdatens").append("='").append(getAnh40Fachdatens()).append("' ");			
        buffer.append("basisObjektchronos").append("='").append(getBasisObjektchronos()).append("' ");			
        buffer.append("atlSielhaut").append("='").append(getAtlSielhaut()).append("' ");			
        buffer.append("anh49Fachdatens").append("='").append(getAnh49Fachdatens()).append("' ");			
        buffer.append("anh50Fachdatens").append("='").append(getAnh50Fachdatens()).append("' ");			
        buffer.append("]");

        return buffer.toString();
    }

    /**
     * @param other
     * @return <code>true</code>, if this and other are equal,
     *         <code>false</code> otherwise
     */
    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        if (other == null) return false;
        if (!(other instanceof BasisObjekt)) return false;
        return (this.getId().equals(
            ((BasisObjekt) other).getId()));
    }

    /**
     * Calculate a unique hashCode
     * @return <code>int</code>
     */
    @Override
    public int hashCode() {
        int result = 17;
        int idValue = this.getId() == null ?
            0 : this.getId().hashCode();
        result = result * 37 + idValue;
        return result;
    }
    
    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>BasisObjekt</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static BasisObjekt merge(BasisObjekt detachedInstance) {
        log.debug("Merging BasisObjekt instance " + detachedInstance);
        return (BasisObjekt) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        BasisObjekt saved = BasisObjekt.merge(this);
        if (saved == null) {
            return false;
        } else {
            this.copy(saved);
            return true;
        }
    }

    /**
     * Update this BasisObjekt with its new values.<br>
     * This is meant to be used after merging!
     * @param copy BasisObjekt
     */
    private void copy(BasisObjekt copy) {
        this.basisStandort = copy.getBasisStandort();
        this.basisAdresse = copy.getBasisAdresse();            
        this.basisLage = copy.getBasisLage();            
        this.basisObjektarten = copy.getBasisObjektarten();            
        this.basisSachbearbeiter = copy.getBasisSachbearbeiter();            
        this.uschistdid = copy.getUschistdid();            
        this.beschreibung = copy.getBeschreibung();            
        this.wiedervorlage = copy.getWiedervorlage();            
        this.erfassungsdatum = copy.getErfassungsdatum();            
        this.gueltigVon = copy.getGueltigVon();            
        this.aenderungsdatum = copy.getAenderungsdatum();            
        this.gueltigBis = copy.getGueltigBis();            
        this.inaktiv = copy.isInaktiv();            
        this.prioritaet = copy.getPrioritaet();            
        this.enabled = copy.isEnabled();            
        this.deleted = copy.isDeleted();            
        this.abwasserfrei = copy.getAbwasserfrei();            
        this.elkaWasserrechts = copy.getElkaWasserrechts();            
        this.anh53Fachdatens = copy.getAnh53Fachdatens();            
        this.anhSuevFachdatens = copy.getAnhSuevFachdatens();            
        this.anhBwkFachdatens = copy.getAnhBwkFachdatens();            
        this.atlProbepkts = copy.getAtlProbepkts();            
        this.basisObjektverknuepfungsForObjekt = copy.getBasisObjektverknuepfungsForObjekt();            
        this.vawsFachdatens = copy.getVawsFachdatens();            
        this.anh55Fachdatens = copy.getAnh55Fachdatens();            
        this.anh52Fachdatens = copy.getAnh52Fachdatens();            
        this.anh56Fachdatens = copy.getAnh56Fachdatens();            
        this.basisObjektverknuepfungsForIstVerknuepftMit = copy.getBasisObjektverknuepfungsForIstVerknuepftMit();            
        this.anh40Fachdatens = copy.getAnh40Fachdatens();            
        this.basisObjektchronos = copy.getBasisObjektchronos();            
        this.atlSielhaut = copy.getAtlSielhaut();            
        this.anh49Fachdatens = copy.getAnh49Fachdatens();            
        this.anh50Fachdatens = copy.getAnh50Fachdatens();            
    }    

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(BasisObjekt detachedInstance) {
        log.debug("Deleting BasisObjekt instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return BasisObjekt.delete(this);
    }

    /**
     * Find an <code>BasisObjekt</code> instance by its primary key
     * @param id the primary key value
     * @return <code>BasisObjekt</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static BasisObjekt findById(java.lang.Integer id) {
        log.debug("Getting BasisObjekt instance with id: " + id);
        return (BasisObjekt)
            new DatabaseAccess().get(BasisObjekt.class, id);
    }

    /**
     * Get a list of all <code>BasisObjekt</code>
     * @return <code>List&lt;BasisObjekt&gt;</code>
     *         all <code>BasisObjekt</code>
     */
    public static List<BasisObjekt> getAll() {
        return DatabaseQuery.getAll(new BasisObjekt());
    }

    /* Custom code goes below here! */
	public Integer getObjektid(){
		return getId();
	}

    public static BasisObjekt findByLageId(Integer id){
        List<BasisObjekt> all = BasisObjekt.getAll();
        for(BasisObjekt i : all){
            log.debug("Comparing " + i.getBasisLage().getId() + " " + id);
            if(i.getBasisLage().getId().equals(id)){
                log.debug("Returning Objekt: " + i.getId());
                return (BasisObjekt) new DatabaseAccess().get(BasisObjekt.class, i.getId());
            }
        }
        return null;
    }
}
