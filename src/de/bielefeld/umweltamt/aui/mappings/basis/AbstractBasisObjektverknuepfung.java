package de.bielefeld.umweltamt.aui.mappings.basis;

// Generated 01.09.2008 14:20:13 by Hibernate Tools 3.2.0.beta8

/**
 * BasisObjektverknuepfung generated by hbm2java
 */
public class AbstractBasisObjektverknuepfung implements java.io.Serializable {

	// Fields    

    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;
	
	private java.lang.Integer id;

	private BasisObjekt basisObjektByIstVerknuepftMit;

	private BasisObjekt basisObjektByObjekt;

	// Constructors

	/** default constructor */
	public AbstractBasisObjektverknuepfung() {
	}

	/** minimal constructor */
	public AbstractBasisObjektverknuepfung(java.lang.Integer id) {
        this.hashValue = 0;
		this.id = id;
	}

	/** full constructor */
	public AbstractBasisObjektverknuepfung(java.lang.Integer id,
			BasisObjekt basisObjektByIstVerknuepftMit,
			BasisObjekt basisObjektByObjekt) {
		this.id = id;
		this.basisObjektByIstVerknuepftMit = basisObjektByIstVerknuepftMit;
		this.basisObjektByObjekt = basisObjektByObjekt;
	}

	// Property accessors
	public java.lang.Integer getId() {
		return this.id;
	}

	public void setId(java.lang.Integer id) {
		this.id = id;
	}

	public BasisObjekt getBasisObjektByIstVerknuepftMit() {
		return this.basisObjektByIstVerknuepftMit;
	}

	public void setBasisObjektByIstVerknuepftMit(
			BasisObjekt basisObjektByIstVerknuepftMit) {
		this.basisObjektByIstVerknuepftMit = basisObjektByIstVerknuepftMit;
	}

	public BasisObjekt getBasisObjektByObjekt() {
		return this.basisObjektByObjekt;
	}

	public void setBasisObjektByObjekt(BasisObjekt basisObjektByObjekt) {
		this.basisObjektByObjekt = basisObjektByObjekt;
	}
    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof BasisObjekt))
            return false;
        BasisObjekt that = (BasisObjekt) rhs;
        if (this.getId() != null && that.getObjektid() != null)
        {
            if (! this.getId().equals(that.getObjektid()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int objektidValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + objektidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
