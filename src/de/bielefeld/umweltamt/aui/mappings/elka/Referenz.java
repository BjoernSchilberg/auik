/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 5.0.0.Final

package de.bielefeld.umweltamt.aui.mappings.elka;

import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseClassToString;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;
import de.bielefeld.umweltamt.aui.mappings.DatabaseSerialVersionUID;
import de.bielefeld.umweltamt.aui.mappings.atl.Klaeranlage;
import de.bielefeld.umweltamt.aui.mappings.atl.Messstelle;
import de.bielefeld.umweltamt.aui.mappings.elka_sync.EEinleitungsstelle;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.AfsNiederschlagswasser;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.SbEntlastung;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.Sonderbauwerk;
import de.bielefeld.umweltamt.aui.utils.AuikLogger;
import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * A class that represents a row in the Referenz database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class Referenz  implements java.io.Serializable {

    /** Generated serialVersionUID for Serializable interface */
    private static final long serialVersionUID =
        DatabaseSerialVersionUID.forReferenz;

    /* Primary key, foreign keys (relations) and table columns */
    private Integer nr;
    private Aba abaByZAbaNr;
    private Aba abaByQAbaNr;
    private Anfallstelle anfallstelleByZAfsNr;
    private Anfallstelle anfallstelleByQAfsNr;
    private Einleitungsstelle qEl;
    private Einleitungsstelle zEl;
    private EEinleitungsstelle einleitungsstelleByQElsNr;
    private EEinleitungsstelle einleitungsstelleByZElsNr;
    private Klaeranlage klaeranlageByQKaNr;
    private Klaeranlage klaeranlageByZKaNr;
    private Messstelle messstelleByQMsstNr;
    private Messstelle messstelleByZMsstNr;
    private AfsNiederschlagswasser afsNiederschlagswasserByQNwAfsNr;
    private AfsNiederschlagswasser afsNiederschlagswasserByZNwAfsNr;
    private SbEntlastung sbEntlastungByQEntlNr;
    private SbEntlastung sbEntlastungByZEntlNr;
    private Sonderbauwerk sonderbauwerkByQSbNr;
    private Sonderbauwerk sonderbauwerkByZSbNr;
    private Boolean fsTog;
    private Integer standortNr;
    private Integer QKkaNr;
    private Integer ZKkaNr;
    private Date aktualDat;
    private Date erstellDat;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public Referenz() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public Referenz(
        Integer nr) {
        this.nr = nr;
    }

    /** Full constructor */
    public Referenz(
        Integer nr, Aba abaByZAbaNr, Aba abaByQAbaNr, Anfallstelle anfallstelleByZAfsNr, Anfallstelle anfallstelleByQAfsNr, Einleitungsstelle einleitungsstelleByQElsNr, Einleitungsstelle einleitungsstelleByZElsNr, Klaeranlage klaeranlageByQKaNr, Klaeranlage klaeranlageByZKaNr, Messstelle messstelleByQMsstNr, Messstelle messstelleByZMsstNr, AfsNiederschlagswasser afsNiederschlagswasserByQNwAfsNr, AfsNiederschlagswasser afsNiederschlagswasserByZNwAfsNr, SbEntlastung sbEntlastungByQEntlNr, SbEntlastung sbEntlastungByZEntlNr, Sonderbauwerk sonderbauwerkByQSbNr, Sonderbauwerk sonderbauwerkByZSbNr, Boolean fsTog, Integer standortNr, Integer QKkaNr, Integer ZKkaNr, Date aktualDat, Date erstellDat) {
        this.nr = nr;
        this.abaByZAbaNr = abaByZAbaNr;
        this.abaByQAbaNr = abaByQAbaNr;
        this.anfallstelleByZAfsNr = anfallstelleByZAfsNr;
        this.anfallstelleByQAfsNr = anfallstelleByQAfsNr;
        this.qEl = einleitungsstelleByQElsNr;
        this.zEl = einleitungsstelleByZElsNr;
        this.klaeranlageByQKaNr = klaeranlageByQKaNr;
        this.klaeranlageByZKaNr = klaeranlageByZKaNr;
        this.messstelleByQMsstNr = messstelleByQMsstNr;
        this.messstelleByZMsstNr = messstelleByZMsstNr;
        this.afsNiederschlagswasserByQNwAfsNr = afsNiederschlagswasserByQNwAfsNr;
        this.afsNiederschlagswasserByZNwAfsNr = afsNiederschlagswasserByZNwAfsNr;
        this.sbEntlastungByQEntlNr = sbEntlastungByQEntlNr;
        this.sbEntlastungByZEntlNr = sbEntlastungByZEntlNr;
        this.sonderbauwerkByQSbNr = sonderbauwerkByQSbNr;
        this.sonderbauwerkByZSbNr = sonderbauwerkByZSbNr;
        this.fsTog = fsTog;
        this.standortNr = standortNr;
        this.QKkaNr = QKkaNr;
        this.ZKkaNr = ZKkaNr;
        this.aktualDat = aktualDat;
        this.erstellDat = erstellDat;
    }

    /* Setter and getter methods */
    public Integer getNr() {
        return this.nr;
    }

    public void setNr(Integer nr) {
        this.nr = nr;
    }

    @JsonInclude(Include.NON_NULL)
    public Aba getAbaByZAbaNr() {
        return this.abaByZAbaNr;
    }

    public void setAbaByZAbaNr(Aba abaByZAbaNr) {
        this.abaByZAbaNr = abaByZAbaNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Aba getAbaByQAbaNr() {
        return this.abaByQAbaNr;
    }

    public void setAbaByQAbaNr(Aba abaByQAbaNr) {
        this.abaByQAbaNr = abaByQAbaNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Anfallstelle getAnfallstelleByZAfsNr() {
        return this.anfallstelleByZAfsNr;
    }

    public void setAnfallstelleByZAfsNr(Anfallstelle anfallstelleByZAfsNr) {
        this.anfallstelleByZAfsNr = anfallstelleByZAfsNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Anfallstelle getAnfallstelleByQAfsNr() {
        return this.anfallstelleByQAfsNr;
    }

    public void setAnfallstelleByQAfsNr(Anfallstelle anfallstelleByQAfsNr) {
        this.anfallstelleByQAfsNr = anfallstelleByQAfsNr;
    }

    @JsonIgnore
    public Einleitungsstelle getqEl() {
        return this.qEl;
    }

    public void setqEl(Einleitungsstelle einleitungsstelleByQElsNr) {
        this.qEl = einleitungsstelleByQElsNr;
    }

    @JsonIgnore
    public Einleitungsstelle getzEl() {
        return this.zEl;
    }

    public void setzEl(Einleitungsstelle einleitungsstelleByZElsNr) {
        this.zEl = einleitungsstelleByZElsNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Klaeranlage getKlaeranlageByQKaNr() {
        return this.klaeranlageByQKaNr;
    }

    public void setKlaeranlageByQKaNr(Klaeranlage klaeranlageByQKaNr) {
        this.klaeranlageByQKaNr = klaeranlageByQKaNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Klaeranlage getKlaeranlageByZKaNr() {
        return this.klaeranlageByZKaNr;
    }

    public void setKlaeranlageByZKaNr(Klaeranlage klaeranlageByZKaNr) {
        this.klaeranlageByZKaNr = klaeranlageByZKaNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Messstelle getMessstelleByQMsstNr() {
        return this.messstelleByQMsstNr;
    }

    public void setMessstelleByQMsstNr(Messstelle messstelleByQMsstNr) {
        this.messstelleByQMsstNr = messstelleByQMsstNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Messstelle getMessstelleByZMsstNr() {
        return this.messstelleByZMsstNr;
    }

    public void setMessstelleByZMsstNr(Messstelle messstelleByZMsstNr) {
        this.messstelleByZMsstNr = messstelleByZMsstNr;
    }

    @JsonInclude(Include.NON_NULL)
    public AfsNiederschlagswasser getAfsNiederschlagswasserByQNwAfsNr() {
        return this.afsNiederschlagswasserByQNwAfsNr;
    }

    public void setAfsNiederschlagswasserByQNwAfsNr(AfsNiederschlagswasser afsNiederschlagswasserByQNwAfsNr) {
        this.afsNiederschlagswasserByQNwAfsNr = afsNiederschlagswasserByQNwAfsNr;
    }

    @JsonInclude(Include.NON_NULL)
    public AfsNiederschlagswasser getAfsNiederschlagswasserByZNwAfsNr() {
        return this.afsNiederschlagswasserByZNwAfsNr;
    }

    public void setAfsNiederschlagswasserByZNwAfsNr(AfsNiederschlagswasser afsNiederschlagswasserByZNwAfsNr) {
        this.afsNiederschlagswasserByZNwAfsNr = afsNiederschlagswasserByZNwAfsNr;
    }

    @JsonInclude(Include.NON_NULL)
    public SbEntlastung getSbEntlastungByQEntlNr() {
        return this.sbEntlastungByQEntlNr;
    }

    public void setSbEntlastungByQEntlNr(SbEntlastung sbEntlastungByQEntlNr) {
        this.sbEntlastungByQEntlNr = sbEntlastungByQEntlNr;
    }

    @JsonInclude(Include.NON_NULL)
    public SbEntlastung getSbEntlastungByZEntlNr() {
        return this.sbEntlastungByZEntlNr;
    }

    public void setSbEntlastungByZEntlNr(SbEntlastung sbEntlastungByZEntlNr) {
        this.sbEntlastungByZEntlNr = sbEntlastungByZEntlNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Sonderbauwerk getSonderbauwerkByQSbNr() {
        return this.sonderbauwerkByQSbNr;
    }

    public void setSonderbauwerkByQSbNr(Sonderbauwerk sonderbauwerkByQSbNr) {
        this.sonderbauwerkByQSbNr = sonderbauwerkByQSbNr;
    }

    @JsonInclude(Include.NON_NULL)
    public Sonderbauwerk getSonderbauwerkByZSbNr() {
        return this.sonderbauwerkByZSbNr;
    }

    public void setSonderbauwerkByZSbNr(Sonderbauwerk sonderbauwerkByZSbNr) {
        this.sonderbauwerkByZSbNr = sonderbauwerkByZSbNr;
    }

    public Boolean getFsTog() {
        return this.fsTog;
    }

    public void setFsTog(Boolean fsTog) {
        this.fsTog = fsTog;
    }

    public Integer getStandortNr() {
        return this.standortNr;
    }

    public void setStandortNr(Integer standortNr) {
        this.standortNr = standortNr;
    }

    @JsonIgnore
    public Integer getQKkaNr() {
        return this.QKkaNr;
    }

    public void setQKkaNr(Integer QKkaNr) {
        this.QKkaNr = QKkaNr;
    }

    @JsonIgnore
    public Integer getZKkaNr() {
        return this.ZKkaNr;
    }

    public void setZKkaNr(Integer ZKkaNr) {
        this.ZKkaNr = ZKkaNr;
    }

    @JsonIgnore
    public Date getAktualDat() {
        return this.aktualDat;
    }

    public void setAktualDat(Date aktualDat) {
        this.aktualDat = aktualDat;
    }

    @JsonIgnore
    public Date getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Date erstellDat) {
        this.erstellDat = erstellDat;
    }

    /**
     * To implement custom toString methods, jump to not generated code.<br>
     * Basically we either call on <code>toDebugString</code> for a debug
     * string, call on <code>toGuiString</code> for a gui representation or do
     * something completely different.
     * @return String
     */
    @Override
    public String toString() {
        return DatabaseClassToString.toStringForClass(this);
    }

    /**
     * Get a string representation for debugging
     * @return String
     */
    public String toDebugString() {
        StringBuffer buffer = new StringBuffer();

        buffer.append(getClass().getSimpleName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
        buffer.append("nr").append("='").append(getNr()).append("' ");
        buffer.append("abaByZAbaNr").append("='").append(getAbaByZAbaNr()).append("' ");
        buffer.append("abaByQAbaNr").append("='").append(getAbaByQAbaNr()).append("' ");
        buffer.append("anfallstelleByZAfsNr").append("='").append(getAnfallstelleByZAfsNr()).append("' ");
        buffer.append("anfallstelleByQAfsNr").append("='").append(getAnfallstelleByQAfsNr()).append("' ");
        buffer.append("einleitungsstelleByQElsNr").append("='").append(getEinleitungsstelleByQElsNr()).append("' ");
        buffer.append("einleitungsstelleByZElsNr").append("='").append(getEinleitungsstelleByZElsNr()).append("' ");
        buffer.append("klaeranlageByQKaNr").append("='").append(getKlaeranlageByQKaNr()).append("' ");
        buffer.append("klaeranlageByZKaNr").append("='").append(getKlaeranlageByZKaNr()).append("' ");
        buffer.append("messstelleByQMsstNr").append("='").append(getMessstelleByQMsstNr()).append("' ");
        buffer.append("messstelleByZMsstNr").append("='").append(getMessstelleByZMsstNr()).append("' ");
        buffer.append("afsNiederschlagswasserByQNwAfsNr").append("='").append(getAfsNiederschlagswasserByQNwAfsNr()).append("' ");
        buffer.append("afsNiederschlagswasserByZNwAfsNr").append("='").append(getAfsNiederschlagswasserByZNwAfsNr()).append("' ");
        buffer.append("sbEntlastungByQEntlNr").append("='").append(getSbEntlastungByQEntlNr()).append("' ");
        buffer.append("sbEntlastungByZEntlNr").append("='").append(getSbEntlastungByZEntlNr()).append("' ");
        buffer.append("sonderbauwerkByQSbNr").append("='").append(getSonderbauwerkByQSbNr()).append("' ");
        buffer.append("sonderbauwerkByZSbNr").append("='").append(getSonderbauwerkByZSbNr()).append("' ");
        buffer.append("fsTog").append("='").append(getFsTog()).append("' ");
        buffer.append("standortNr").append("='").append(getStandortNr()).append("' ");
        buffer.append("QKkaNr").append("='").append(getQKkaNr()).append("' ");
        buffer.append("ZKkaNr").append("='").append(getZKkaNr()).append("' ");
        buffer.append("aktualDat").append("='").append(getAktualDat()).append("' ");
        buffer.append("erstellDat").append("='").append(getErstellDat()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

    /**
     * @param other
     * @return <code>true</code>, if this and other are equal,
     *         <code>false</code> otherwise
     */
    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        if (other == null) return false;
        if (!(other instanceof Referenz)) return false;
        return (this.getNr().equals(
            ((Referenz) other).getNr()));
    }

    /**
     * Calculate a unique hashCode
     * @return <code>int</code>
     */
    @Override
    public int hashCode() {
        int result = 17;
        int idValue = this.getNr() == null ?
            0 : this.getNr().hashCode();
        result = result * 37 + idValue;
        return result;
    }

    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>Referenz</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static Referenz merge(Referenz detachedInstance) {
        log.debug("Merging Referenz instance " + detachedInstance);
        return (Referenz) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        Referenz saved = Referenz.merge(this);
        if (saved == null) {
            return false;
        } else {
            this.copy(saved);
            return true;
        }
    }

    /**
     * Update this Referenz with its new values.<br>
     * This is meant to be used after merging!
     * @param copy Referenz
     */
    private void copy(Referenz copy) {
        this.nr = copy.getNr();
        this.abaByZAbaNr = copy.getAbaByZAbaNr();
        this.abaByQAbaNr = copy.getAbaByQAbaNr();
        this.anfallstelleByZAfsNr = copy.getAnfallstelleByZAfsNr();
        this.anfallstelleByQAfsNr = copy.getAnfallstelleByQAfsNr();
        this.qEl = copy.getqEl();
        this.zEl = copy.getzEl();
        this.klaeranlageByQKaNr = copy.getKlaeranlageByQKaNr();
        this.klaeranlageByZKaNr = copy.getKlaeranlageByZKaNr();
        this.messstelleByQMsstNr = copy.getMessstelleByQMsstNr();
        this.messstelleByZMsstNr = copy.getMessstelleByZMsstNr();
        this.afsNiederschlagswasserByQNwAfsNr = copy.getAfsNiederschlagswasserByQNwAfsNr();
        this.afsNiederschlagswasserByZNwAfsNr = copy.getAfsNiederschlagswasserByZNwAfsNr();
        this.sbEntlastungByQEntlNr = copy.getSbEntlastungByQEntlNr();
        this.sbEntlastungByZEntlNr = copy.getSbEntlastungByZEntlNr();
        this.sonderbauwerkByQSbNr = copy.getSonderbauwerkByQSbNr();
        this.sonderbauwerkByZSbNr = copy.getSonderbauwerkByZSbNr();
        this.fsTog = copy.getFsTog();
        this.standortNr = copy.getStandortNr();
        this.QKkaNr = copy.getQKkaNr();
        this.ZKkaNr = copy.getZKkaNr();
        this.aktualDat = copy.getAktualDat();
        this.erstellDat = copy.getErstellDat();
    }

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(Referenz detachedInstance) {
        log.debug("Deleting Referenz instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return Referenz.delete(this);
    }

    /**
     * Find an <code>Referenz</code> instance by its primary key
     * @param id the primary key value
     * @return <code>Referenz</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static Referenz findById(java.lang.Integer id) {
        log.debug("Getting Referenz instance with id: " + id);
        return (Referenz)
            new DatabaseAccess().get(Referenz.class, id);
    }

    /**
     * Get a list of all <code>Referenz</code>
     * @return <code>List&lt;Referenz&gt;</code>
     *         all <code>Referenz</code>
     */
    public static List<Referenz> getAll() {
        return DatabaseQuery.getAll(new Referenz());
    }

    /* Custom code goes below here! */

    @JsonInclude(Include.NON_NULL)
    public EEinleitungsstelle getEinleitungsstelleByQElsNr() {
        return einleitungsstelleByQElsNr;
    }

    @JsonInclude(Include.NON_NULL)
    public EEinleitungsstelle getEinleitungsstelleByZElsNr() {
        return einleitungsstelleByZElsNr;
    }

    public void setEinleitungsstelleByQElsNr(EEinleitungsstelle els) {
        einleitungsstelleByQElsNr = els;
    }

    public void setEinleitungsstelleByZElsNr(EEinleitungsstelle els) {
        einleitungsstelleByZElsNr = els;
    }



}
