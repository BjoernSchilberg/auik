/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 5.0.0.Final

package de.bielefeld.umweltamt.aui.mappings.elka;

import de.bielefeld.umweltamt.aui.mappings.DatabaseClassToString;
import de.bielefeld.umweltamt.aui.mappings.DatabaseSerialVersionUID;
import java.util.Date;

/**
 * A class that represents a row in the EMessstelleId database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class EMessstelleId  implements java.io.Serializable {

    /** Generated serialVersionUID for Serializable interface */
    private static final long serialVersionUID =
        DatabaseSerialVersionUID.forEMessstelleId;
    
    /* Primary key, foreign keys (relations) and table columns */
    private Integer nr;
    private Integer standortNr;
    private String bezeichnung;
    private Integer typOpt;
    private Integer artMessungOpt;
    private String bemerkung;
    private Date aktualDat;
    private Date erstellDat;
    private String herkunft;
    private Integer lageid;

    /** Default constructor */
    public EMessstelleId() {
        // This place is intentionally left blank.
    }


    /** Full constructor */
    public EMessstelleId(
        Integer nr, Integer standortNr, String bezeichnung, Integer typOpt, Integer artMessungOpt, String bemerkung, Date aktualDat, Date erstellDat, String herkunft, Integer lageid) {
        this.nr = nr;
        this.standortNr = standortNr;
        this.bezeichnung = bezeichnung;
        this.typOpt = typOpt;
        this.artMessungOpt = artMessungOpt;
        this.bemerkung = bemerkung;
        this.aktualDat = aktualDat;
        this.erstellDat = erstellDat;
        this.herkunft = herkunft;
        this.lageid = lageid;
    }

    /* Setter and getter methods */
    public Integer getNr() {
        return this.nr;
    }

    public void setNr(Integer nr) {
        this.nr = nr;
    }

    public Integer getStandortNr() {
        return this.standortNr;
    }

    public void setStandortNr(Integer standortNr) {
        this.standortNr = standortNr;
    }

    public String getBezeichnung() {
        return this.bezeichnung;
    }

    public void setBezeichnung(String bezeichnung) {
        this.bezeichnung = bezeichnung;
    }

    public Integer getTypOpt() {
        return this.typOpt;
    }

    public void setTypOpt(Integer typOpt) {
        this.typOpt = typOpt;
    }

    public Integer getArtMessungOpt() {
        return this.artMessungOpt;
    }

    public void setArtMessungOpt(Integer artMessungOpt) {
        this.artMessungOpt = artMessungOpt;
    }

    public String getBemerkung() {
        return this.bemerkung;
    }

    public void setBemerkung(String bemerkung) {
        this.bemerkung = bemerkung;
    }

    public Date getAktualDat() {
        return this.aktualDat;
    }

    public void setAktualDat(Date aktualDat) {
        this.aktualDat = aktualDat;
    }

    public Date getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Date erstellDat) {
        this.erstellDat = erstellDat;
    }

    public String getHerkunft() {
        return this.herkunft;
    }

    public void setHerkunft(String herkunft) {
        this.herkunft = herkunft;
    }

    public Integer getLageid() {
        return this.lageid;
    }

    public void setLageid(Integer lageid) {
        this.lageid = lageid;
    }

    /**
     * To implement custom toString methods, jump to not generated code.<br>
     * Basically we either call on <code>toDebugString</code> for a debug
     * string, call on <code>toGuiString</code> for a gui representation or do
     * something completely different.
     * @return String
     */
    @Override
    public String toString() {
        return DatabaseClassToString.toStringForClass(this); 
    }

    /**
     * Get a string representation for debugging
     * @return String
     */
    public String toDebugString() {
        StringBuffer buffer = new StringBuffer();
        
        buffer.append(getClass().getSimpleName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
        buffer.append("nr").append("='").append(getNr()).append("' ");			
        buffer.append("standortNr").append("='").append(getStandortNr()).append("' ");			
        buffer.append("bezeichnung").append("='").append(getBezeichnung()).append("' ");			
        buffer.append("typOpt").append("='").append(getTypOpt()).append("' ");			
        buffer.append("artMessungOpt").append("='").append(getArtMessungOpt()).append("' ");			
        buffer.append("bemerkung").append("='").append(getBemerkung()).append("' ");			
        buffer.append("aktualDat").append("='").append(getAktualDat()).append("' ");			
        buffer.append("erstellDat").append("='").append(getErstellDat()).append("' ");			
        buffer.append("herkunft").append("='").append(getHerkunft()).append("' ");			
        buffer.append("lageid").append("='").append(getLageid()).append("' ");			
        buffer.append("]");

        return buffer.toString();
    }

    /* Custom code goes below here! */

}
