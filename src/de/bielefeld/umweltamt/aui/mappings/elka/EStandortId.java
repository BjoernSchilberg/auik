/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 5.0.0.Final

package de.bielefeld.umweltamt.aui.mappings.elka;

import de.bielefeld.umweltamt.aui.mappings.DatabaseClassToString;
import de.bielefeld.umweltamt.aui.mappings.DatabaseSerialVersionUID;
import java.util.Date;

/**
 * A class that represents a row in the EStandortId database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class EStandortId  implements java.io.Serializable {

    /** Generated serialVersionUID for Serializable interface */
    private static final long serialVersionUID =
        DatabaseSerialVersionUID.forEStandortId;
    
    /* Primary key, foreign keys (relations) and table columns */
    private Integer nr;
    private String gemeindekennzahl;
    private String gemarkung;
    private String flur;
    private String flurstuecke;
    private Float e32;
    private Float n32;
    private Boolean industrieabwasserTog;
    private Boolean niederschlagswasserTog;
    private Boolean kommunaleKaTog;
    private Boolean kleikaTog;
    private Boolean nurSbTog;
    private Date revidatum;
    private Date erstellDat;
    private String herkunft;
    private Integer adrNr;

    /** Default constructor */
    public EStandortId() {
        // This place is intentionally left blank.
    }


    /** Full constructor */
    public EStandortId(
        Integer nr, String gemeindekennzahl, String gemarkung, String flur, String flurstuecke, Float e32, Float n32, Boolean industrieabwasserTog, Boolean niederschlagswasserTog, Boolean kommunaleKaTog, Boolean kleikaTog, Boolean nurSbTog, Date revidatum, Date erstellDat, String herkunft, Integer adrNr) {
        this.nr = nr;
        this.gemeindekennzahl = gemeindekennzahl;
        this.gemarkung = gemarkung;
        this.flur = flur;
        this.flurstuecke = flurstuecke;
        this.e32 = e32;
        this.n32 = n32;
        this.industrieabwasserTog = industrieabwasserTog;
        this.niederschlagswasserTog = niederschlagswasserTog;
        this.kommunaleKaTog = kommunaleKaTog;
        this.kleikaTog = kleikaTog;
        this.nurSbTog = nurSbTog;
        this.revidatum = revidatum;
        this.erstellDat = erstellDat;
        this.herkunft = herkunft;
        this.adrNr = adrNr;
    }

    /* Setter and getter methods */
    public Integer getNr() {
        return this.nr;
    }

    public void setNr(Integer nr) {
        this.nr = nr;
    }

    public String getGemeindekennzahl() {
        return this.gemeindekennzahl;
    }

    public void setGemeindekennzahl(String gemeindekennzahl) {
        this.gemeindekennzahl = gemeindekennzahl;
    }

    public String getGemarkung() {
        return this.gemarkung;
    }

    public void setGemarkung(String gemarkung) {
        this.gemarkung = gemarkung;
    }

    public String getFlur() {
        return this.flur;
    }

    public void setFlur(String flur) {
        this.flur = flur;
    }

    public String getFlurstuecke() {
        return this.flurstuecke;
    }

    public void setFlurstuecke(String flurstuecke) {
        this.flurstuecke = flurstuecke;
    }

    public Float getE32() {
        return this.e32;
    }

    public void setE32(Float e32) {
        this.e32 = e32;
    }

    public Float getN32() {
        return this.n32;
    }

    public void setN32(Float n32) {
        this.n32 = n32;
    }

    public Boolean getIndustrieabwasserTog() {
        return this.industrieabwasserTog;
    }

    public void setIndustrieabwasserTog(Boolean industrieabwasserTog) {
        this.industrieabwasserTog = industrieabwasserTog;
    }

    public Boolean getNiederschlagswasserTog() {
        return this.niederschlagswasserTog;
    }

    public void setNiederschlagswasserTog(Boolean niederschlagswasserTog) {
        this.niederschlagswasserTog = niederschlagswasserTog;
    }

    public Boolean getKommunaleKaTog() {
        return this.kommunaleKaTog;
    }

    public void setKommunaleKaTog(Boolean kommunaleKaTog) {
        this.kommunaleKaTog = kommunaleKaTog;
    }

    public Boolean getKleikaTog() {
        return this.kleikaTog;
    }

    public void setKleikaTog(Boolean kleikaTog) {
        this.kleikaTog = kleikaTog;
    }

    public Boolean getNurSbTog() {
        return this.nurSbTog;
    }

    public void setNurSbTog(Boolean nurSbTog) {
        this.nurSbTog = nurSbTog;
    }

    public Date getRevidatum() {
        return this.revidatum;
    }

    public void setRevidatum(Date revidatum) {
        this.revidatum = revidatum;
    }

    public Date getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Date erstellDat) {
        this.erstellDat = erstellDat;
    }

    public String getHerkunft() {
        return this.herkunft;
    }

    public void setHerkunft(String herkunft) {
        this.herkunft = herkunft;
    }

    public Integer getAdrNr() {
        return this.adrNr;
    }

    public void setAdrNr(Integer adrNr) {
        this.adrNr = adrNr;
    }

    /**
     * To implement custom toString methods, jump to not generated code.<br>
     * Basically we either call on <code>toDebugString</code> for a debug
     * string, call on <code>toGuiString</code> for a gui representation or do
     * something completely different.
     * @return String
     */
    @Override
    public String toString() {
        return DatabaseClassToString.toStringForClass(this); 
    }

    /**
     * Get a string representation for debugging
     * @return String
     */
    public String toDebugString() {
        StringBuffer buffer = new StringBuffer();
        
        buffer.append(getClass().getSimpleName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
        buffer.append("nr").append("='").append(getNr()).append("' ");			
        buffer.append("gemeindekennzahl").append("='").append(getGemeindekennzahl()).append("' ");			
        buffer.append("gemarkung").append("='").append(getGemarkung()).append("' ");			
        buffer.append("flur").append("='").append(getFlur()).append("' ");			
        buffer.append("flurstuecke").append("='").append(getFlurstuecke()).append("' ");			
        buffer.append("e32").append("='").append(getE32()).append("' ");			
        buffer.append("n32").append("='").append(getN32()).append("' ");			
        buffer.append("industrieabwasserTog").append("='").append(getIndustrieabwasserTog()).append("' ");			
        buffer.append("niederschlagswasserTog").append("='").append(getNiederschlagswasserTog()).append("' ");			
        buffer.append("kommunaleKaTog").append("='").append(getKommunaleKaTog()).append("' ");			
        buffer.append("kleikaTog").append("='").append(getKleikaTog()).append("' ");			
        buffer.append("nurSbTog").append("='").append(getNurSbTog()).append("' ");			
        buffer.append("revidatum").append("='").append(getRevidatum()).append("' ");			
        buffer.append("erstellDat").append("='").append(getErstellDat()).append("' ");			
        buffer.append("herkunft").append("='").append(getHerkunft()).append("' ");			
        buffer.append("adrNr").append("='").append(getAdrNr()).append("' ");			
        buffer.append("]");

        return buffer.toString();
    }

    /* Custom code goes below here! */

}
