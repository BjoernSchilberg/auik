/**
 * Copyright 2005-2042, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */

// Generated by Hibernate Tools 5.0.0.Final

package de.bielefeld.umweltamt.aui.mappings.vaws;

import de.bielefeld.umweltamt.aui.HibernateSessionFactory;
import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseClassToString;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;
import de.bielefeld.umweltamt.aui.mappings.DatabaseSerialVersionUID;
import de.bielefeld.umweltamt.aui.utils.AuikLogger;

import java.util.Date;
import java.util.List;
import java.util.Set;

/**
 * A class that represents a row in the VawsAbfuellflaeche database table.<br>
 * This class is meant to serve as a model and should be copied into the
 * appropriate package and may be customized below the given mark.
 */
public class VawsJgs  implements java.io.Serializable {

    /** Generated serialVersionUID for Serializable interface */
    private static final long serialVersionUID =
        DatabaseSerialVersionUID.forVawsJgs;
    
    /* Primary key, foreign keys (relations) and table columns */
    private Integer id;
    private VawsFachdaten vawsFachdaten;
    private Integer lagerflaeche;
    private Integer gewaesser_abstand;
    private String gewaesser_name;
    private Integer brunnen_abstand;
    private String tierhaltung;
    private Boolean seitenwaende;
    private Integer wandhoehe;
    private String bodenplatte;
    private boolean ueberdachung;
    private String auffangbeh;
    private Integer volumen_auffangbeh;
    private String rohrleitung;
    private Date dichtheitspruefung;
    private Boolean drainage;
    private Boolean fuellanzeiger;
    private Boolean schieber;
    private Boolean abdeckung;
    private Boolean leitung_geprueft;
    private boolean enabled;
    private boolean deleted;

    /** Logging */
    private static final AuikLogger log = AuikLogger.getLogger();

    /** Default constructor */
    public VawsJgs() {
        // This place is intentionally left blank.
    }

    /** Minimal constructor */
    public VawsJgs(
    	Integer id, VawsFachdaten vawsFachdaten, boolean enabled, boolean deleted) {
        this.vawsFachdaten = vawsFachdaten;
        this.enabled = enabled;
        this.deleted = deleted;
    }

	/** Full constructor */
    public VawsJgs(Integer id, VawsFachdaten vawsFachdaten,
			Integer lagerflaeche, Integer gewaesser_abstand,
			String gewaesser_name, Integer brunnen_abstand, String tierhaltung,
			Boolean seitenwaende, Integer wandhoehe, String bodenplatte,
			boolean ueberdachung, String auffangbeh,
			Integer volumen_auffangbeh, String rohrleitung,
			Date dichtheitspruefung, Boolean drainage, Boolean fuellanzeiger,
			Boolean schieber, Boolean abdeckung, Boolean leitung_geprueft,
			boolean enabled, boolean deleted) {
		super();
		this.id = id;
		this.vawsFachdaten = vawsFachdaten;
		this.lagerflaeche = lagerflaeche;
		this.gewaesser_abstand = gewaesser_abstand;
		this.gewaesser_name = gewaesser_name;
		this.brunnen_abstand = brunnen_abstand;
		this.tierhaltung = tierhaltung;
		this.seitenwaende = seitenwaende;
		this.wandhoehe = wandhoehe;
		this.bodenplatte = bodenplatte;
		this.ueberdachung = ueberdachung;
		this.auffangbeh = auffangbeh;
		this.volumen_auffangbeh = volumen_auffangbeh;
		this.rohrleitung = rohrleitung;
		this.dichtheitspruefung = dichtheitspruefung;
		this.drainage = drainage;
		this.fuellanzeiger = fuellanzeiger;
		this.schieber = schieber;
		this.abdeckung = abdeckung;
		this.leitung_geprueft = leitung_geprueft;
		this.enabled = enabled;
		this.deleted = deleted;
	}

	/* Setter and getter methods */
    public Integer getLagerflaeche() {
		return lagerflaeche;
	}

	public void setLagerflaeche(Integer lagerflaeche) {
		this.lagerflaeche = lagerflaeche;
	}

	public Integer getGewaesser_abstand() {
		return gewaesser_abstand;
	}

	public void setGewaesser_abstand(Integer gewaesser_abstand) {
		this.gewaesser_abstand = gewaesser_abstand;
	}

	public String getGewaesser_name() {
		return gewaesser_name;
	}

	public void setGewaesser_name(String gewaesser_name) {
		this.gewaesser_name = gewaesser_name;
	}

	public Integer getBrunnen_abstand() {
		return brunnen_abstand;
	}

	public void setBrunnen_abstand(Integer brunnen_abstand) {
		this.brunnen_abstand = brunnen_abstand;
	}

	public String getTierhaltung() {
		return tierhaltung;
	}

	public void setTierhaltung(String tierhaltung) {
		this.tierhaltung = tierhaltung;
	}

	public Boolean getSeitenwaende() {
		return seitenwaende;
	}

	public void setSeitenwaende(Boolean seitenwaende) {
		this.seitenwaende = seitenwaende;
	}

	public Integer getWandhoehe() {
		return wandhoehe;
	}

	public void setWandhoehe(Integer wandhoehe) {
		this.wandhoehe = wandhoehe;
	}

	public String getBodenplatte() {
		return bodenplatte;
	}

	public void setBodenplatte(String bodenplatte) {
		this.bodenplatte = bodenplatte;
	}

	public Boolean getUeberdachung() {
		return ueberdachung;
	}

	public void setUeberdachung(Boolean ueberdachung) {
		this.ueberdachung = ueberdachung;
	}

	public String getAuffangbeh() {
		return auffangbeh;
	}

	public void setAuffangbeh(String auffangbeh) {
		this.auffangbeh = auffangbeh;
	}

	public Integer getVolumen_auffangbeh() {
		return volumen_auffangbeh;
	}

	public void setVolumen_auffangbeh(Integer volumen_auffangbeh) {
		this.volumen_auffangbeh = volumen_auffangbeh;
	}

	public String getRohrleitung() {
		return rohrleitung;
	}

	public void setRohrleitung(String rohrleitung) {
		this.rohrleitung = rohrleitung;
	}
	
	public Date getDichtheitspruefung() {
		return dichtheitspruefung;
	}

	public void setDichtheitspruefung(Date dichtheitspruefung) {
		this.dichtheitspruefung = dichtheitspruefung;
	}

	public Boolean getDrainage() {
		return drainage;
	}

	public void setDrainage(Boolean drainage) {
		this.drainage = drainage;
	}

	public Boolean getFuellanzeiger() {
		return fuellanzeiger;
	}

	public void setFuellanzeiger(Boolean fuellanzeiger) {
		this.fuellanzeiger = fuellanzeiger;
	}

	public Boolean getSchieber() {
		return schieber;
	}

	public void setSchieber(Boolean schieber) {
		this.schieber = schieber;
	}

	public Boolean getAbdeckung() {
		return abdeckung;
	}

	public void setAbdeckung(Boolean abdeckung) {
		this.abdeckung = abdeckung;
	}

	public Boolean getLeitung_geprueft() {
		return leitung_geprueft;
	}

	public void setLeitung_geprueft(Boolean leitung_geprueft) {
		this.leitung_geprueft = leitung_geprueft;
	}

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public VawsFachdaten getVawsFachdaten() {
        return this.vawsFachdaten;
    }

    public void setVawsFachdaten(VawsFachdaten vawsFachdaten) {
        this.vawsFachdaten = vawsFachdaten;
    }

    public boolean isEnabled() {
        return this.enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public boolean isDeleted() {
        return this.deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * To implement custom toString methods, jump to not generated code.<br>
     * Basically we either call on <code>toDebugString</code> for a debug
     * string, call on <code>toGuiString</code> for a gui representation or do
     * something completely different.
     * @return String
     */
    @Override
    public String toString() {
        return DatabaseClassToString.toStringForClass(this); 
    }

    /**
     * Get a string representation for debugging
     * @return String
     */
    public String toDebugString() {
        StringBuffer buffer = new StringBuffer();
        
        buffer.append(getClass().getSimpleName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
        buffer.append("vawsFachdaten").append("='").append(getVawsFachdaten()).append("' ");			
        buffer.append("lagerflaeche").append("='").append(getLagerflaeche()).append("' ");			
        buffer.append("gewaesserAbstand").append("='").append(getGewaesser_abstand()).append("' ");			
        buffer.append("gewaesserName").append("='").append(getGewaesser_name()).append("' ");			
        buffer.append("brunnenAbstand").append("='").append(getBrunnen_abstand()).append("' ");			
        buffer.append("tierhaltung").append("='").append(getTierhaltung()).append("' ");			
        buffer.append("seitenwaende").append("='").append(getSeitenwaende()).append("' ");			
        buffer.append("wandhoehe").append("='").append(getWandhoehe()).append("' ");			
        buffer.append("bodenplatte").append("='").append(getBodenplatte()).append("' ");
        buffer.append("ueberdachung").append("='").append(getUeberdachung()).append("' ");
        buffer.append("auffangbeh").append("='").append(getAuffangbeh()).append("' ");
        buffer.append("volumenAuffangbeh").append("='").append(getVolumen_auffangbeh()).append("' ");			
        buffer.append("rohrleitung").append("='").append(getRohrleitung()).append("' ");
        buffer.append("enabled").append("='").append(isEnabled()).append("' ");			
        buffer.append("deleted").append("='").append(isDeleted()).append("' ");			
        buffer.append("]");

        return buffer.toString();
    }

    /**
     * @param other
     * @return <code>true</code>, if this and other are equal,
     *         <code>false</code> otherwise
     */
    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        if (other == null) return false;
        if (!(other instanceof VawsJgs)) return false;
        return (this.getId().equals(
            ((VawsJgs) other).getId()));
    }

    /**
     * Calculate a unique hashCode
     * @return <code>int</code>
     */
    @Override
    public int hashCode() {
        int result = 17;
        int idValue = this.getId() == null ?
            0 : this.getId().hashCode();
        result = result * 37 + idValue;
        return result;
    }
    
    /**
     * Merge (save or update) a detached instance
     * @param detachedInstance the instance to merge
     * @return <code>VawsAbfuellflaeche</code> the merged instance,
     *         if everything went okay,
     *         <code>null</code> otherwise
     */
    public static VawsJgs merge(VawsJgs detachedInstance) {
        log.debug("Merging VawsAbfuellflaeche instance " + detachedInstance);
        return (VawsJgs) new DatabaseAccess().merge(detachedInstance);
    }

    /**
     * Merge (save or update) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean merge() {
        VawsJgs saved = VawsJgs.merge(this);
        if (saved == null) {
            return false;
        } else {
            this.copy(saved);
            return true;
        }
    }

    /**
     * Update this VawsAbfuellflaeche with its new values.<br>
     * This is meant to be used after merging!
     * @param copy VawsAbfuellflaeche
     */
    private void copy(VawsJgs copy) {
        this.vawsFachdaten = copy.getVawsFachdaten();            
        this.lagerflaeche = copy.getLagerflaeche();            
        this.gewaesser_abstand = copy.getGewaesser_abstand();            
        this.gewaesser_name = copy.getGewaesser_name();            
        this.brunnen_abstand = copy.getBrunnen_abstand();            
        this.tierhaltung = copy.getTierhaltung();            
        this.seitenwaende = copy.getSeitenwaende();            
        this.wandhoehe = copy.getWandhoehe();
        this.bodenplatte = copy.getBodenplatte();
        this.ueberdachung = copy.getUeberdachung();
        this.auffangbeh = copy.getAuffangbeh();
        this.volumen_auffangbeh = copy.getVolumen_auffangbeh();
        this.rohrleitung = copy.getRohrleitung();
        this.enabled = copy.isEnabled();            
        this.deleted = copy.isDeleted();            
    }    

    /**
     * Delete (mark as deleted) a detached instance
     * @param detachedInstance the instance to delete
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public static boolean delete(VawsJgs detachedInstance) {
        log.debug("Deleting VawsAbfuellflaeche instance " + detachedInstance);
        return new DatabaseAccess().delete(detachedInstance);
    }

    /**
     * Delete (mark as deleted) this instance
     * @return <code>true</code>, if everything went okay,
     *         <code>false</code> otherwise
     */
    public boolean delete() {
        return VawsJgs.delete(this);
    }

    /**
     * Find an <code>VawsAbfuellflaeche</code> instance by its primary key
     * @param id the primary key value
     * @return <code>VawsAbfuellflaeche</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static VawsJgs findById(java.lang.Integer id) {
        log.debug("Getting VawsAbfuellflaeche instance with id: " + id);
        return (VawsJgs)
            new DatabaseAccess().get(VawsJgs.class, id);
    }

    /**
     * Get a list of all <code>VawsAbfuellflaeche</code>
     * @return <code>List&lt;VawsAbfuellflaeche&gt;</code>
     *         all <code>VawsAbfuellflaeche</code>
     */
    public static List<VawsJgs> getAll() {
        return DatabaseQuery.getAll(new VawsJgs());
    }

    /* Custom code goes below here! */

    public static VawsJgs findByBehaelterid(Integer id){
        VawsFachdaten fd = (VawsFachdaten) HibernateSessionFactory.currentSession().createQuery("from VawsFachdaten where behaelterid= " + id).list().get(0);
        Set<VawsJgs> list = fd.getVawsJgss();
		if (list.size() != 0) {
			return list.iterator().next();
		}
		return null;
    }

}
