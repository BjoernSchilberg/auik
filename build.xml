<project name="AUIK" default="compile" basedir=".">

   	<description>
        Buildfile for project AUIK
    </description>

    <!-- Some properties for necessary path definitions -->
    <property name="src"	location="src" />
    <property name="libs"	location="lib" />
    <property name="build" 	location="bin" />
    <property name="dist"	location="dist" />
    <property name="doc"	location="doc" />
    <property name="test"	location="test" />
    
    <property name="resources" 
        value="/de/bielefeld/umweltamt/aui/resources" />
    <property name="reports"	value="${resources}/reports" />
    <property name="mappings" 
        value="/de/bielefeld/umweltamt/aui/mappings" />

    <!-- The classpath that includes the necessary external libs and AUIK -->
    <path id="classpath">
        <fileset dir="${libs}">
            <include name="**/*.jar" />
        </fileset>
        <path location="${build}" />
    </path>
    
	<!-- =================================================================== -->    
	<!-- Generate hibernate stuff                                            -->    
    <!-- In:  hibernate.properties, hibernate.reveng.xml                     --> 
    <!-- Out: [0] ${src}/${mappings}/[package]/{class-name}.hbm.xml,         -->
    <!--      [1] hibernate.cfg.xml [1],                                     -->
    <!--      [2] ${src}/${mappings}/[package]/Abstract{class-name}.java [2],-->
    <!--      [3] ${src}/${mappings}/[package]/{class-name}.java [3]         -->
	<!-- =================================================================== -->    
    <target name="db2hbm2java"
        description="Generate hibernate xml files from database via reverse 
        	engineering">
        <hibernatetool destdir="${test}">
            <jdbcconfiguration
                propertyfile="hibernate.properties"
                revengfile="hibernate.reveng.xml">
            </jdbcconfiguration>
            <hbm2hbmxml /> <!-- [0] -->
            <hbm2cfgxml /> <!-- [1] -->
            <!-- This (below) is a costum version of hbm2java /--> 
            <!-- [2] -->
            <hbmtemplate
                templatepath="${test}/templates/pojo"
                template="AuikPojo.ftl"
		        filepattern="{package-name}/Abstract{class-name}.java">
                <property key="jdk5" value="true" />
                <property key="ejb3" value="false" />
      		</hbmtemplate>
            <!-- [3] -->
            <!-- This (below) is a costum version of hbm2dao /--> 
            <hbmtemplate
                templatepath="${test}/templates/dao"
                template="AuikDaoHome.ftl"
		        filepattern="{package-name}/{class-name}.java">
                <property key="jdk5" value="true" />
                <property key="ejb3" value="false" />
                <property key="sessionFactoryName" value="SessionFactory" />
      		</hbmtemplate>
            <!-- hbm2ddl wrong direction... ;-) / -->
        </hibernatetool>
    </target>

    <taskdef name="hibernatetool"
             classname="org.hibernate.tool.ant.HibernateToolTask"
             classpathref="classpath" />

	<!-- =================================================================== -->    
	<!-- Compile the source                                                  -->    
	<!-- =================================================================== -->    
    <target name="compile" description="Compile the source">
        <mkdir dir="${build}" />
        <javac srcdir="${src}" destdir="${build}" classpathref="classpath"
            debug="on" debuglevel="lines,vars,source" />
        <copy todir="${build}">
            <fileset dir="${src}">
                <include name="**/*.png" />
                <include name="**/*.jpg" />
                <include name="**/*.gif" />
                <include name="**/*.xml" />
                <include name="**/*.properties" />
                <include name="**/*.txt" />
            </fileset>
        </copy>
    </target>

	<!-- =================================================================== -->    
	<!-- Compile the jasper reports                                          -->    
	<!-- =================================================================== -->    
    <target name="jasper" depends="compile">
        <taskdef name="jrc"
            classname="net.sf.jasperreports.ant.JRAntCompileTask">
            <classpath refid="classpath" />
        </taskdef>
        <jrc
            destdir="${src}/${reports}"
            tempdir="${src}/${reports}"
            keepjava="false">
            <src>
                <fileset dir="${src}/${reports}">
                    <include name="**/*.jrxml" />
                </fileset>
            </src>
            <classpath refid="classpath" />
        </jrc>
        <mkdir dir="${build}/${reports}" />
        <copy todir="${build}/${reports}">
            <fileset dir="${src}/${reports}" include="**/*.jasper" />
        </copy>
    </target>

    
	<!-- =================================================================== -->    
	<!-- Create a jar archive and fill its manifest                          -->    
	<!-- =================================================================== -->    
    <target name="dist" depends="compile,version"
        description="Create a jar archive">
        <mkdir dir="${dist}" />
        <!-- Set some properties for the manifest -->
        <tstamp><format property="TODAY" pattern="yyyy-MM-dd" /></tstamp>
        <loadfile property="auik.authors"
            srcfile="${src}/${resources}/authors.txt" />
        <!-- echo message="${auik.authors}" / -->
        <jar
            destfile="${dist}/AUIK.jar"
            basedir="${build}"
            filesetmanifest="skip"
            update="true">
		<!-- filesetmanifest="mergewithoutmain" -->
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Built-Date" value="${TODAY}" />
                <attribute
                    name="Main-Class"
                    value="de.bielefeld.umweltamt.aui.AUIKataster" />
                <attribute
                    name="Specification-Title"
                	value="Anlagen- und Indirekteinleiter Kataster" />
                <attribute
                    name="Specification-Version"
                    value="0.0" />
                <!-- Do we even have an official specification? -->
                <attribute
                    name="Specification-Vendor"
                    value="Stadt Bielefeld, Umweltamt" />
                <attribute
                    name="Implementation-Title"
                	value="Anlagen- und Indirekteinleiter Kataster" />
                <attribute
                    name="Implementation-Version"
                    value="Version ${auik.version}" /> 
                <attribute
                    name="Implementation-Vendor"
                    value="Stadt Bielefeld und Intevation GmbH" />
                <attribute
                    name="Implementation-URL"
                    value="http://wald.intevation.org/projects/auik/" />
            </manifest>
            <!-- TODO: Something more like this, but still with extracting jars
            <fileset dir="${libs}">
                <include name="**/*.jar" />
            </fileset>
            -->            
            <zipfileset excludes="META-INF/*.SF" src="${libs}/c3p0-0.9.0.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/commons-codec-1.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/commons-collections-2.1.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/commons-logging-1.0.4.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/concurrent-1.3.2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/connector.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/dom4j-1.6.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/ehcache-1.2.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/hibernate3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jdbc2_0-stdext.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/log4j-1.2.11.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/oscache-2.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/proxool-0.8.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/xml-apis.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/forms-1.0.5.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/looks-1.2.2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/l2fprod-common-all.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jfreechart-1.0.0-pre2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jcommon-1.0.0-pre2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jcalendar.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/asm.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/asm-attrs.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/cglib-2.1.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/antlr-2.7.6.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/sac.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jta.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/coreapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/dataadapterapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/commons-cli-1.0.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/com.ibm.icu_3.8.1.v20080530.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/dteapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/engineapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/flute.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/js.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/mysql-connector-java-5.0.5-bin.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/modelapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/scriptapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/postgresql-8.3-605.jdbc3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jasperreports-3.7.6.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jasperreports-fonts-3.7.6.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/chartengineapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/jaxrpc.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/axis.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/commons-digester-1.7.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/iText-2.1.7.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/groovy-all-1.7.5.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/commons-discovery-0.5.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/axis-wsdl4j-1.5.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${libs}/junit-4.10.jar" />
    	</jar>
        <copy file="${dist}/AUIK.jar" tofile="${dist}/${TODAY} AUIK.jar" />
    </target>
    
	<!-- =================================================================== -->    
	<!-- Clean up (${build}, ${dist}, ${test})                                        -->    
	<!-- =================================================================== -->    
    <target name="clean"
    	description="Clean up everything but the directory that contains the
        	documentation and the previous 'yyyy-MM-dd AUIK.jar's">
        <delete dir="${build}" />
        <delete file="${dist}/AUIK.jar" />
        <delete file="${dist}/auik.properties" />
        <delete>
        	<fileset dir="${test}/${mappings}" includes="**/*.hbm.xml" />
        	<fileset dir="${test}/${mappings}" includes="**/*.java" />
        </delete>
    </target>

	<!-- =================================================================== -->    
	<!-- Clean up everything                                                 -->    
	<!-- =================================================================== -->    
    <target name="cleanall" depends="clean" description="Clean up everything">
        <delete dir="${dist}" />
        <delete dir="${doc}" />
<!--    <delete>
            <fileset dir="${src}/${reports}" includes="**/*.jasper" />
        </delete>-->
    </target>

	<!-- =================================================================== -->    
	<!-- Run the application                                                 -->    
	<!-- =================================================================== -->    
    <target name="run" depends="compile,jasper"
        description="Run the application">
        <java
            classname="de.bielefeld.umweltamt.aui.AUIKataster"
            classpathref="classpath"
            fork="true"
        />
    </target>

	<!-- =================================================================== -->    
	<!-- Run the application from the jar archive                            -->    
	<!-- =================================================================== -->    
    <target name="runjar" depends="dist"
        description="Run the application from the jar archive">
        <java jar="${dist}/AUIK.jar" fork="true" />
    </target>
    
	<!-- =================================================================== -->    
	<!-- Generate javadoc                                                    -->    
	<!-- =================================================================== -->    
    <target name="javadoc" depends="compile"
    	description="Creates JavaDoc for this application">
        <mkdir dir="${doc}" />
        <javadoc destdir="${doc}" author="true" version="true" use="true">
            <!-- TODO: Get this to work under windows... -->
            <!-- executable="C:\Programme\Java\jdk1.6.0_33\bin\javac.exe" -->
            <fileset dir="${src}">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
    </target>

	<!-- =================================================================== -->    
	<!-- Get the latest tag and revision from the SVN and build the version  -->    
	<!-- number from them: <version> = <tag>-rev<revision>                   -->    
	<!-- =================================================================== -->    
	<target name="version"
		description="Get the current tag and revision from the SVN and save it
	    	to the version number.">
	    <exec
	    	executable="C:\appz\cygwin\bin\bash.exe"
	        outputproperty="auik.tag"
	        osfamily="windows">
	        <arg value="--login" />
	        <arg value="/cygdrive/d/Data/workspace/auik_pg/scripts/shell/getLatestTag.sh" />
	    </exec>
	    <exec
	        executable="./scripts/shell/getLatestTag.sh"
	        outputproperty="auik.tag"
	        osfamily="unix">
	    </exec>
	    <exec
	        executable="C:\appz\cygwin\bin\svnversion.exe"
	        outputproperty="auik.revision"
	        osfamily="windows"
	    />
	    <exec
	        executable="svnversion"
	        outputproperty="auik.revision"
	        osfamily="unix"
	    />
	    <property name="auik.version" value="${auik.tag}-rev${auik.revision}" />
	    <echo message="Version was set to '${auik.version}'." level="info" />
	</target>
    
	<!-- =================================================================== -->    
	<!-- This is just me testing and lerning ant here!                       -->
	<!-- =================================================================== -->    
	<target name="Connz Target"
		description="Testing Tasks">
		<echo message="error"	level="error" />
		<echo message="warning"	level="warning" />
		<echo message="info"	level="info" />
		<echo message="verbose"	level="verbose" />
		<echo message="debug"	level="debug" />
        <tstamp><format property="TODAY" pattern="dd. MMM yyyy" /></tstamp>
	    <echo message="${TODAY}" />
	    <javac
	        srcdir="${test}" destdir="${build}">
	        <classpath>
	            <path refid="classpath" />
	            <pathelement path="bin" />
            </classpath>
	    </javac>
	    <junit printsummary="true" showoutput="true" fork="false">
	        <classpath>
	            <path refid="classpath" />
	            <pathelement path="bin" />
            </classpath>
	        <formatter type="plain" />
	        <test name="de.bielefeld.umweltamt.aui.utils.KommaDoubleTest" />
	    </junit>
	</target>

</project>
