<project name="AUIK" default="compile" basedir=".">

   	<description>
        Buildfile for project AUIK
    </description>

    <!-- Some properties for necessary path definitions -->
    <property name="root"       location="." />
    <property name="src"        location="src" />
    <property name="lib"        location="lib" />
    <property name="bin"        location="bin" />
    <property name="dist"       location="dist" />
    <property name="javadoc"    location="javadoc" />
    <property name="test"       location="test" />
    <property name="data"       location="data" />

    <property name="resources"
        value="${src}/de/bielefeld/umweltamt/aui/resources" />
    <property name="config"     value="${resources}/config" />
    <property name="reports"    value="${resources}/reports" />
    <property name="gen.mappings"
        value="/de/bielefeld/umweltamt/aui/mappings/generated" />

    <!-- The classpath that includes the necessary external libs and AUIK -->
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <path location="${bin}" />
        <path location="${config}" /> <!-- Add config path for log4j -->
    </path>

    <!-- =================================================================== -->
    <!-- Generate hibernate stuff                                            -->
    <!-- In:  hibernate.properties, hibernate.reveng.xml                     -->
    <!-- Out: [0] ${src}/[package]/{class-name}.hbm.xml,                     -->
    <!--      [1] ${config}/generated/hibernate.cfg.xml [1],                 -->
    <!--      [2] ${src}/[package]/{class-name}.java,                        -->
    <!-- =================================================================== -->
    <target name="db2hbm2java"
        description="Generate hibernate xml files from database via reverse 
            engineering">
        <taskdef name="hibernatetool"
             classname="org.hibernate.tool.ant.HibernateToolTask"
             classpathref="classpath" />
        <hibernatetool destdir="${src}">
            <jdbcconfiguration
                propertyfile="${config}/hibernate.properties"
                revengfile="${config}/hibernate.reveng.xml">
            </jdbcconfiguration>
            <hbm2hbmxml /> <!-- [0] -->
            <hbm2cfgxml destdir="${config}/generated" /> <!-- [1] -->
            <!-- This (below) is a costum version of hbm2java /--> 
            <!-- [2] -->
            <hbmtemplate
                templatepath="${data}/templates/auik"
                template="Pojo.ftl"
                filepattern="{package-name}/{class-name}.java">
                <property key="jdk5" value="true" />
                <property key="ejb3" value="false" />
            </hbmtemplate>
            <!-- [2] old -->
            <!-- hbmtemplate
                templatepath="${data}/templates/pojo"
                template="AuikPojo.ftl"
                filepattern="{package-name}/Abstract{class-name}.java">
                <property key="jdk5" value="true" />
                <property key="ejb3" value="false" />
            </hbmtemplate -->
            <!-- [3] old -->
            <!-- This (below) is a costum version of hbm2dao /--> 
            <!-- hbmtemplate
                templatepath="${data}/templates/dao"
                template="AuikDaoHome.ftl"
                filepattern="{package-name}/{class-name}.java">
                <property key="jdk5" value="true" />
                <property key="ejb3" value="false" />
                <property key="sessionFactoryName" value="SessionFactory" />
            </hbmtemplate -->
            <!-- hbm2ddl wrong direction... ;-) / -->
        </hibernatetool>
    </target>

    <!-- =================================================================== -->
    <!-- Compile the source                                                  -->
    <!-- =================================================================== -->
    <target name="compile" description="Compile the source">
        <mkdir dir="${bin}" />
        <javac srcdir="${src}" destdir="${bin}" classpathref="classpath"
            debug="on" debuglevel="lines,vars,source" />
        <copy todir="${bin}">
            <fileset dir="${src}">
                <include name="**/*.png" />
                <include name="**/*.jpg" />
                <include name="**/*.gif" />
                <include name="**/*.xml" />
                <include name="**/*.properties" />
                <include name="**/*.txt" />
                <include name="**/*.jasper" />
                <include name="**/*.rptdesign" />
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Compile the jasper reports                                          -->
    <!-- =================================================================== -->
    <target name="jasper" depends="compile">
        <taskdef name="jrc"
            classname="net.sf.jasperreports.ant.JRAntCompileTask">
            <classpath refid="classpath" />
        </taskdef>
        <jrc
            destdir="${reports}"
            tempdir="${reports}">
            <src>
                <fileset dir="${reports}">
                    <include name="**/*.jrxml" />
                </fileset>
            </src>
            <classpath refid="classpath" />
        </jrc>
    </target>

    <!-- =================================================================== -->
    <!-- Create a jar archive and fill its manifest                          -->
    <!-- =================================================================== -->
    <target name="dist" depends="compile,version"
        description="Create a jar archive">
        <mkdir dir="${dist}" />
        <!-- Set some properties for the manifest -->
        <tstamp><format property="TODAY" pattern="yyyy-MM-dd" /></tstamp>
        <loadfile property="auik.authors"
            srcfile="${resources}/authors.txt" />
        <!-- echo message="${auik.authors}" / -->
        <jar
            destfile="${dist}/AUIK.jar"
            basedir="${bin}"
            filesetmanifest="skip"
            update="true">
        <!-- filesetmanifest="mergewithoutmain" -->
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Built-Date" value="${TODAY}" />
                <attribute
                    name="Main-Class"
                    value="de.bielefeld.umweltamt.aui.AUIKataster" />
                <attribute
                    name="Specification-Title"
                    value="Anlagen- und Indirekteinleiter Kataster" />
                <attribute
                    name="Specification-Version"
                    value="0.0" />
                <!-- Do we even have an official specification? -->
                <attribute
                    name="Specification-Vendor"
                    value="Stadt Bielefeld, Umweltamt" />
                <attribute
                    name="Implementation-Title"
                    value="Anlagen- und Indirekteinleiter Kataster" />
                <attribute
                    name="Implementation-Version"
                    value="Version ${auik.version}" /> 
                <attribute
                    name="Implementation-Vendor"
                    value="Stadt Bielefeld und Intevation GmbH" />
                <attribute
                    name="Implementation-URL"
                    value="http://wald.intevation.org/projects/auik/" />
            </manifest>
            <!-- TODO: Something more like this, but still with extracting jars
            <fileset dir="${libs}">
                <include name="**/*.jar" />
            </fileset>
            -->
            <zipfileset excludes="META-INF/*.SF" src="${lib}/c3p0-0.9.0.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/commons-codec-1.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/commons-collections-2.1.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/commons-logging-1.0.4.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/concurrent-1.3.2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/connector.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/dom4j-1.6.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/ehcache-1.2.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/hibernate3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jdbc2_0-stdext.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/log4j-1.2.11.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/oscache-2.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/proxool-0.8.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/xml-apis.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/forms-1.0.5.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/looks-1.2.2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/l2fprod-common-all.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jfreechart-1.0.0-pre2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jcommon-1.0.0-pre2.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jcalendar.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/asm.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/asm-attrs.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/cglib-2.1.3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/antlr-2.7.6.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/sac.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jta.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/coreapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/dataadapterapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/commons-cli-1.0.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/com.ibm.icu_3.8.1.v20080530.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/dteapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/engineapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/flute.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/js.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/mysql-connector-java-5.0.5-bin.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/modelapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/scriptapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/postgresql-8.3-605.jdbc3.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jasperreports-3.7.6.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jasperreports-fonts-3.7.6.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/chartengineapi.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/jaxrpc.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/axis.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/commons-digester-1.7.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/iText-2.1.7.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/groovy-all-1.7.5.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/commons-discovery-0.5.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/axis-wsdl4j-1.5.1.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/junit-4.10.jar" />
            <zipfileset excludes="META-INF/*.SF" src="${lib}/com.jgoodies.uif_lite.jar" />
        </jar>
        <copy file="${dist}/AUIK.jar" tofile="${dist}/${TODAY} AUIK.jar" />
    </target>

    <!-- =================================================================== -->
    <!-- Clean up (${bin}, ${dist}, ${test})                                 -->
    <!-- =================================================================== -->
    <target name="clean"
        description="Clean up everything but the directory that contains the
            documentation and the previous 'yyyy-MM-dd AUIK.jar's">
        <!-- delete dir="${bin}" / -->
        <delete file="${dist}/AUIK.jar" />
        <delete file="${dist}/auik.properties" />
        <!-- delete file="${config}/generated/hibernate.cfg.xml" / -->
        <delete>
            <fileset dir="${src}/${gen.mappings}" includes="**/*.hbm.xml" />
            <fileset dir="${src}/${gen.mappings}" includes="**/*.java" />
        </delete>
    </target>

    <!-- =================================================================== -->
    <!-- Clean up everything                                                 -->
    <!-- =================================================================== -->
    <target name="cleanall" depends="clean" description="Clean up everything">
        <delete dir="${javadoc}" />
<!--
        <delete dir="${dist}" />
        <delete>
            <fileset dir="${src}/${reports}" includes="**/*.jasper" />
        </delete>
-->
    </target>

    <!-- =================================================================== -->
    <!-- Run the application                                                 -->
    <!-- =================================================================== -->
    <target name="run" depends="compile,jasper"
        description="Run the application">
        <java
            classname="de.bielefeld.umweltamt.aui.AUIKataster"
            classpathref="classpath"
            fork="true"
        />
    </target>

    <!-- =================================================================== -->
    <!-- Run the application from the jar archive                            -->
    <!-- =================================================================== -->
    <target name="runjar" depends="dist"
        description="Run the application from the jar archive">
        <java jar="${dist}/AUIK.jar" fork="true" />
    </target>
    
    <!-- =================================================================== -->
    <!-- Generate javadoc                                                    -->
    <!-- =================================================================== -->
    <target name="javadoc" depends="compile"
        description="Creates JavaDoc for this application">
        <mkdir dir="${javadoc}" />
        <javadoc destdir="${javadoc}" author="true" version="true" use="true">
            <!-- TODO: Get this to work under windows... -->
            <!-- executable="C:\Programme\Java\jdk1.6.0_33\bin\javac.exe" -->
            <fileset dir="${src}">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Get the latest tag and revision from the SVN and build the version  -->
    <!-- number from them: <version> = <tag>-rev<revision>                   -->
    <!-- =================================================================== -->
    <target name="version"
        description="Get the current tag and revision from the SVN and save it
            to the version number.">
        <exec
            executable="C:\appz\cygwin\bin\bash.exe"
            outputproperty="auik.tag"
            osfamily="windows">
            <arg value="--login" />
            <arg value="/cygdrive/d/Data/workspace/auik_pg/data/scripts/shell/getLatestTag.sh" />
        </exec>
        <exec
            executable="./scripts/shell/getLatestTag.sh"
            outputproperty="auik.tag"
            osfamily="unix">
        </exec>
        <exec
            executable="C:\appz\cygwin\bin\svnversion.exe"
            outputproperty="auik.revision"
            osfamily="windows"
        />
        <exec
            executable="svnversion"
            outputproperty="auik.revision"
            osfamily="unix"
        />
        <property name="auik.version" value="${auik.tag}-rev${auik.revision}" />
        <echo message="Version was set to '${auik.version}'." level="info" />
    </target>

    <!-- =================================================================== -->
    <!-- This is just me testing and lerning ant here!                       -->
    <!-- =================================================================== -->
    <target name="Connz Target"
        description="Testing Tasks">
        <echo message="error"   level="error" />
        <echo message="warning" level="warning" />
        <echo message="info"    level="info" />
        <echo message="verbose" level="verbose" />
        <echo message="debug"   level="debug" />
        <tstamp><format property="TODAY" pattern="dd. MMM yyyy" /></tstamp>
        <echo message="${TODAY}" />
        <javac
            srcdir="${test}" destdir="${bin}">
            <classpath>
                <path refid="classpath" />
                <pathelement path="bin" />
            </classpath>
        </javac>
        <junit printsummary="true" showoutput="true" fork="false">
            <classpath>
                <path refid="classpath" />
                <pathelement path="bin" />
            </classpath>
            <formatter type="plain" />
            <test name="de.bielefeld.umweltamt.aui.utils.KommaDoubleTest" />
        </junit>
    </target>

</project>
