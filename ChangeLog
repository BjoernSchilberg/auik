2011-01-03  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Die Personal- und Sachkosten werden nun anhand eines festen Stundentarifs
	  und der Dauer berechnet.

	* src/de/bielefeld/umweltamt/aui/utils/DateUtils.java: Ein paar neue
	  Methoden, die die Stunden, Minuten und Sekunden aus einem Timestamp im
	  einzelnen ermitteln. Außerdem gibt es eine Methode, die die Stunden
	  zwischen zwei Datumsobjekten ermittelt (Achtung: begrenzt auf 1 Tag).

	* reports/gebuehrenbescheid.jrxml: Kleinere Anpassungen (Euro Zeichen, etc)
	  für die Personal- und Sachkosten durchgeführt.

2011-01-03  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Der Gebührenbescheid wird nun mit den Parametern der Probe gefüllt.

	* src/de/bielefeld/umweltamt/aui/utils/JRMapDataSource.java: Der DataSource
	  wurde ein wenig aufgebohrt und damit generischer gemacht, damit dieser
	  nicht nur für einen Probenahmeauftrag sondern auch für den
	  Gebührenbescheid funktioniert. Der Standard-Konstruktor nimmt nun zwei
	  Parameter entgegen - die Werte als Object Array sowie die Spaltennamen als
	  String Array. Die Methode getFieldValue() sucht sich die Werte aus dem
	  Werte-Array nun anhand der Indizes der Spaltennamen.

	* src/de/bielefeld/umweltamt/aui/utils/PDFExporter.java: Das Template des
	  Gebührenbescheids wird nun auch mit Subdaten befüllt, welche die
	  wiederum die Parameterliste befüllen.

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbenahmen.java: Analog
	  zum Probenahmeauftrag gibt es hier nun eine Methode
	  getBescheidDataSource(), die ein JRMapDataSource Objekt für den
	  Gebührenbescheid liefert.

	* reports/gebuehren_parameterliste.jrxml: Ein Subtemplate, welches die
	  Parameterliste des Gebührenbescheides erstellt.

	* reports/gebuehrenbescheid.jrxml: Integration des Templates
	  'gebuehren_parameterliste'.

2011-01-03  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Bugfix: Die Dauer einer Probenahme wird im Gebührenbescheid nun korrekt
	  dargestellt.

	* src/de/bielefeld/umweltamt/aui/utils/DateUtils.java: Eine neue
	  Hilfsklasse, die das Arbeiten mit Datums- und Zeitobjekten vereinfachen
	  soll.

2011-01-03  Ingo Weinzierl <ingo@intevation.de>

	* reports/probenahmeauftrag.jrxml: Das Feld "handgeschöpft" wurde in
	  "handgeschöpft mit Becherglas" umbenannt. Außerdem gibt es rechts daneben
	  nun ein Feld "sonstiges", in dem die Verwendung anderer Entnahmegeräte
	  festgehalten werden kann.

2011-01-03  Ingo Weinzierl <ingo@intevation.de>

	* reports/probenahmeauftrag.jrxml: Bugfix: Die Seitenzahl wird nun auf jeder
	  Seite korrekt angezeigt.

2011-01-03  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Die zu beprobenden Parameter werden nun in die Parameterliste eingefüllt.
	  Es werden also keine statischen Daten mehr angezeigt.

	* src/de/bielefeld/umweltamt/aui/utils/JRMapDataSource.java: Es gibt nun
	  einen weiteren Konstruktor, der als Parameter ein Object[][] erwartet,
	  welches die Zeilen und Spalten enthält, die in die Parameterliste des
	  Probenahmeauftrags gefüllt werden sollen.

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbenahmen.java: Eine
	  weitere Funktion getDataSource() liefert ein JRMapDataSource Objekt einer
	  vorhandenen Probenahme.

2010-12-21  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Der Probenahmenauftrag wird mit einer JRMapDataSource gefüllt, welche
	  die Liste der zu beprobenden Parameter enthält. An dieser Stelle muss
	  noch dafür gesorgt werden, dass die richtigen Parameter in die
	  JRMapDataSource gefüllt werden.

	* src/de/bielefeld/umweltamt/aui/utils/JRMapDataSource.java: Dies wird
	  eine Datenquelle, die die zu beprobenden Parameter enthält. Zur Zeit
	  werden nur statische Daten geliefert.

	* src/de/bielefeld/umweltamt/aui/utils/PDFExporter.java: Die Parameter für
	  den Subreport werden hier beim Probenahmeauftrag-Export hinzugefügt.
	  Außerdem wird generell für einen Probenahmeauftrag, sowie für den
	  Gebührenbescheid keine Datenquelle mehr verwendet - stattdessen wird
	  JREmptyDataSource benutzt, um genau 1x das Template als PDF zu
	  erstellen.

	* reports/probenahmeauftrag.jrxml: Der Probenahmeauftrag hat nun ein
	  Subreport `ParameterReport`, welcher die zu probenden Parameter als
	  Liste darstellt.

	* reports/ParameterReport.jrxml: Template, welches die zu beprobenden
	  Parameter als Liste darstellt.

2010-12-21  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/utils/PDFExporter.java: Die Parameter für
	  die Templates werden nun als Parameter in den JasperFillManager
	  gereicht - nicht mehr als Datenquelle. Die Datenquelle wird noch
	  benötigt, um Listen zu füllen.

	* reports/probenahmeauftrag.jrxml,
	  reports/gebuehrenbescheid.jrxml: Die Felder werden nun nicht mehr aus
	  der Datenquelle gelesen, sondern aus den Parametern.

2010-12-20  Ingo Weinzierl <ingo@intevation.de>

	* reports/probenahmeauftrag.jrxml: Verbesserungen am Template - maßgeblich
	  Sonderzeichen.

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Pfad zur PDF Datei mit zum Befüllen des Tempaltes.

2010-12-20  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Label und Variable `Ansprechpartner` in `Sachbearbeiter` geändert. Das
	  Feld speicherte seinen Inhalt sowieso bereits in der DB-Spalte
	  `sachbearbeiter` der Tabelle `atl_probenahmen`. Das Feld
	  `Ansprechpartner` wird an anderer Stelle gepflegt werden.

2010-12-20  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Das Drucken von Probenahmeaufträgen und Gebührenbescheiden erhöht nun
	  automatisch den Status der aktuellen Probenahme.

2010-12-20  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Knopf zum manuellen Erhöhen des Vorgangsstatus von Probenahmen
	  integriert. Die Funktionalität ist jedoch noch nicht implementiert -
	  hier wurde erstmal nur die GUI erweitert.

2010-12-20  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Felder in der Probenahmeauftrag-Oberfläche bzgl des Betriebs angepasst:
	  der Name des Betriebs ist nicht mehr editierbar und enthält den Names
	  sowie die Adresse des Betriebes. Das Feld `Entnahmepunkt` zeigt die
	  Beschreibung des Entnahmepunktes.

2010-12-17  Ingo Weinzierl <ingo@intevation.de>

	* reports/gebuehrenbescheid.jrxml: Verbesserungen am Template (Platz
	  zwischen Elementen zueinander).

2010-12-17  Ingo Weinzierl <ingo@intevation.de>

	* build.xml: Es gibt nun zwei unterschiedliche Clean-Tasks.
	  clean:    Löscht das `build` und `dist` Verzeichnis sowie die übersetzten
	            JasperReports Templates.
	  cleanall: Löscht `build`, `dist`, die übersetzten Tempaltes und auch das
	            `doc` Verzeichnis.

2010-12-17  Ingo Weinzierl <ingo@intevation.de>

	* reports/gebuehrenbescheid.jrxml: Der erste Entwurf eines
	  Gebührenbescheid-Templates. Hier müssen/sollten noch ein paar Anpassungen
	  gemacht werden (Schriftgröße, Abstand von Feldern zueinander, etc).

	* src/de/bielefeld/umweltamt/aui/icons/gebuehrenbescheid-icon.jpg: Dieses
	  Icon wird vom Gebührenbescheid referenziert.

	* lib/groovy-all-1.7.5.jar: Beim Übersetzen des Gebührenbescheides wird
	  diese Lib benötigt (Abhängigkeit von JasperReports).

2010-12-17  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/utils/PDFExporter.java: Ein paar
	  Änderungen, damit die Jasper Templates gefunden werden, egal ob man AUIK
	  aus den übersetzten Quellen startet, oder aus einem Jar-Archiv. Dazu wird
	  der Resource-Mechanismus aus Class.getResourceAsStream() genutzt.

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Anpassungen des PDF Exports bzgl der Änderungen in PDFExporter.

2010-12-17  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Implementation einer neuen Methode getBescheidDruckMap() zur Ermittlung
	  der benötigten Parameter zum Befüllen eines Gebührenbescheides.
	  Es sind jedoch noch ein paar fehlende Parameter, bei denen noch unklar
	  ist, woher diese Informationen stammen sollen (siehe `TODO` im Code).

2010-12-16  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/utils/PDFExporter.java: Die Funktionen zum
	  Erstellen von Probenahmeauftrag- und Gebührenbescheid-PDFs haben einen
	  weiteren boolean Parameter erhalten, der bestimmt, ob nach der Erstellung
	  des PDFs ein Druckdialog geöffnet werden soll. Außerdem geben diese
	  Funktionen nun ein befülltes JasperPrint Objekt zurück.

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Nach Erstellung von Probenahmeauftrag- und Gebührenbescheid-PDF wird ein
	  Druckdialog geöffnet, in dem die PDFs gedruckt werden können.

2010-12-15  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/AnalyseProcessor.java: Die Funktion
	  process() gibt bei erfolgreichem Persistieren nun True zurück, falls das
	  Persistieren fehlgeschlagen ist, wird False zurückgeliefert.

	* src/de/bielefeld/umweltamt/aui/module/AnalyseImport.java: Nach dem
	  Importieren der Daten (speichern in die Datenbank) wird ein Dialog
	  geöffnet, das den Nutzer über die Anzahl der erfolgreich importierten
	  Zeilen der Analyseergebnisse informiert.

2010-12-15  Ingo Weinzierl <ingo@intevation.de>

	* build.xml: Neues Target zum Compilieren von JasperReports Templates. Die
	  Targets `compile` und `run` hängen von diesem ab, damit die Templates
	  nicht während der Lauftzeit übersetzt werden müssen.

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Die Knöpfe zum Drucken eines Probenahmeauftrags und Gebührenbescheids
	  triggern nun den PDFExporter an, der entsprechende PDFs erzeugt.

	* src/de/bielefeld/umweltamt/aui/utils/PDFExporter.java: Ein PDF Generator
	  für Probenahmeaufträge und Gebührenbescheide. Bisher ist nur die Funktion
	  zum Erstellen eines Probenahmeauftrag-PDFs implementiert. Die eigentliche
	  Erstellung der PDFs wird von JasperReports durchgeführt.

	* reports/probenahmeauftrag.jrxml: Das JasperReports Template, welches zum
	  Erstellen von Probenahmenauftrag-PDFs benutzt wird.

	* src/de/bielefeld/umweltamt/aui/utils/JRMapDataSource.java: Dies ist eine
	  Datenquelle für JasperReports. Bei der Erstellung eines solchen Objekts
	  wird eine java.util.Map übergeben, in der die einzufüllenden Felder des
	  Templates enthalten sind.

	* src/de/bielefeld/umweltamt/aui/mappings/basis/BasisBetreiber.java: Eine
	  neue Funktion implementiert, die die Adresse des Betreibers als String
	  ausgibt.

	* lib/jasperreports-3.7.6.jar,
	  lib/commons-digester-1.7.jar,
	  lib/iText-2.1.7.jar,
	  lib/commons-beanutils-1.8.0.jar: JasperReports-3.7.6 mit Abhängigkeiten.

2010-12-13  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Die Oberfläche wurde um das Feld 'Vorgangsart' erleichtert, da dies nicht
	  benötigt wird. Desweiteren gibt es nun für den Probenahmeauftrag und den
	  Gebührenbescheid jeweils einen Knopf zum Öffnen eines Dateidialogs und
	  einen Knopf zum Drucken des Dokuments. Nach Auswahl einer Datei bzw eines
	  Dateinamens wird dieser im Feld links daneben angezeigt. Die 'Drucken'
	  Knöpfe haben noch keine Funktionalität.

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbenahmen.java,
	  src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbepkt.java: Methoden
	  hinzugefügt, um den BasisBetreiber des jeweiligen Objekts abzufragen.

2010-12-13  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/AnalyseImport.java: Es werden nun
	  nurnoch die ausgewählten Zeilen importiert und zu der entsprechenden
	  Probenahme gespeichert - nicht mehr zwangsläufig alle Zeilen des Imports.

2010-12-13  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbenahmen.java: Die
	  Methode findAtlAnalyseposition(.) hat einen weiteren Parameter 'createNew'
	  bekommen, um zu bestimmen, ob eine neue Analyseposition angelegt werden
	  soll, falls noch keine durch den Parameter und der Einheit beschriebene
	  existiert.

	* src/de/bielefeld/umweltamt/aui/module/AnalyseProcessor.java: Einführung
	  einer neuen Funktion importStatus(.) um den Import-Status einer
	  Analyseergebnis-Zeile zu ermitteln. Die Funktion hat drei Rückgabewerte:
	  -1 Falls keine Probenahme mit entsprechender Kennnummer existiert
	   1 Falls eine Probenahme mit enstpechender Analyseposition existiert
	   2 Falls eine Probenahme existiert, die Analyseposition jedoch erstellt
	   werden müsste.

	* src/de/bielefeld/umweltamt/aui/module/AnalyseImport.java: Implementierung
	  zur Darstellung der Analyseergebnis-Zeilen in der Tabelle. Die Zeilen sind
	  entsprechend grün, orange oder rot (abhängig vom Import-Status) markiert.

2010-12-10  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/AnalyseImport.java: Der Import
	  ignoriert nun die erste Zeile der Txt Datei - diese hat für die
	  Analyseergebnisse keine Relevanz. Außerdem wird das Speichern der
	  Ergebnisse nun angestoßen (allerdings werden alle Zeilen gespeichert).
	  
	  Derzeit fehlt weiterhin die Anzeige der Importierten Daten und eine
	  Auswahlmöglichkeit zur Plausibilitätsprüfung. 

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbenahmen.java: Neue
	  Methode zum Suchen einer bestimmten AtlAnalyseposition anhand eines
	  Parameters und einer Einheit.

	* src/de/bielefeld/umweltamt/aui/module/AnalyseProcessor.java: Neu. Diese
	  Klasse stellt einige Hilfsfunktionen zum Verarbeiten von
	  Analyseergebnis-Imports zu Verfügung.

2010-12-09  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/AnalyseImport.java: Die Knöpfe in
	  der Oberfläche triggern nun entsprechende Funktionen an. Nach dem Laden
	  einer Datei wird das Label der Dateiauswahl nun grün hervorgehoben und das
	  Label zum Importieren bekommt den Fokus. Der Knopf zum Importieren wird
	  erst jetzt aktiv.
	  Hinweis: Das Laden der Daten ist noch nicht implementiert. Der Parser
	  liest zwar die Daten ein, wertet sie jedoch noch nicht aus. Eine Prüfung
	  der Daten findet ebenfalls noch nicht statt.

2010-12-09  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/AnalyseImport.java: Neues Modul zum
	  Importieren von Probenahme-Analyseergebnissen. Zurzeit ist lediglich die
	  Oberfläche implementiert. Die Logik zum Importieren der Daten und
	  Persistieren in die Datenbank fehlen noch.

	* src/de/bielefeld/umweltamt/aui/SettingsManager.java: AnalyseImport als
	  Modul hinzugefügt.

2010-12-08  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Noch fehlende notwendige Eingabefelder wurden hinzugefügt. Außerdem werden
	  die Werte nun auch nach Knopfdruck auf den Button "speichern" in die
	  Datenbank persistiert - beim Initialisieren der Oberfläche werden diese
	  Werte wieder ausgelesen und die entsprechenden Felder der GUI mit diesen
	  Werten vorbelegt.

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AbstractAtlProbenahmen.java:
	  Bugfix: die Methode getUhrzeitbeginn() liefert wieder den Wert des
	  Attributes 'uhrzeitbeginn' und nicht den Wert von 'ueberschreitung'.

	* src/de/bielefeld/umweltamt/aui/mappings/atl/AtlStatus.java: Es gibt nun
	  zwei weitere Funktionen, die zum einen, ein AtlStatus Objekt anhand einer
	  Bezeichnung, und zum anderen alle möglichen Status als String Array
	  liefern.

2010-12-08  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/AUIKataster.java: Funktion errorOutput(.)
	  analog zur Funktion debugOutput(.) hinzugefügt. Die Meldungen dieser
	  Funktion werden jedoch immer ausgegeben. Man hätte auch direkt an
	  entsprechenden Stellen im Quelltext System.err.println(.) aufrufen können
	  - diese Funktion wahrt jedoch eine einheitliche Formatierung der
	  Nachrichten.

2010-12-08  Ingo Weinzierl <ingo@intevation.de>

	* build.xml: Abhängigkeit vom Ant `run` Target von `dist` zu `compile`
	  geändert. Es ist nun nicht mehr notwendig ein Jar-Archiv zu erstellen, um
	  die Anwendung auszuführen - es reicht das übersetzen der Quellen.
	  Außerdem wurden den übersetzten Klassen DEBUG Informationen hinzugefügt,
	  damit Stack-Traces u.a. Zeilennummern enthalten.

2010-12-07  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Bugfix: Die Parameter in der Parameterauswahl sind nun selektierbar.

2010-12-07  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java:
	  Oberfläche zur Eingabe von Probenahmedetails um weitere Parameter
	  erweitert.

	  TODO: Werte aus der Oberfläche in die DB persistieren.

2010-12-03  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/AbstractModul.java,
	  src/de/bielefeld/umweltamt/aui/AUIKSplash.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/Anh55Panel.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/UebergabePanel.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/ProbepktAuswPanel.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/ChronoPanel.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/ProbepunktPanel.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/BasisPanel.java,
	  src/de/bielefeld/umweltamt/aui/module/objektpanels/Anh52Panel.java,
	  src/de/bielefeld/umweltamt/aui/module/EinleiterSuevkanAuswertung.java,
	  src/de/bielefeld/umweltamt/aui/module/common/SchlammPanel.java,
	  src/de/bielefeld/umweltamt/aui/module/common/editors/StandortEditor.java,
	  src/de/bielefeld/umweltamt/aui/module/common/editors/ProbenEditor.java,
	  src/de/bielefeld/umweltamt/aui/module/EinleiterAnh49Auswertung.java,
	  src/de/bielefeld/umweltamt/aui/module/BasisStandortSuchen.java,
	  src/de/bielefeld/umweltamt/aui/module/ProbenehmerAuswertung.java,
	  src/de/bielefeld/umweltamt/aui/ReportManager.java,
	  src/de/bielefeld/umweltamt/aui/ModulManager.java,
	  src/de/bielefeld/umweltamt/aui/AUIKataster.java,
	  src/de/bielefeld/umweltamt/aui/utils/charts/APosDataItem.java,
	  src/de/bielefeld/umweltamt/aui/tests/WiedervorlageVawsTest.java,
	  src/de/bielefeld/umweltamt/aui/tests/BetreiberTest.java,
	  src/de/bielefeld/umweltamt/aui/tests/AuswertungTest.java,
	  src/de/bielefeld/umweltamt/aui/tests/GUITest.java,
	  src/de/bielefeld/umweltamt/aui/tests/ObjektTest.java,
	  src/de/bielefeld/umweltamt/aui/tests/SielhautTest.java,
	  src/de/bielefeld/umweltamt/aui/tests/StandortTest.java,
	  src/de/bielefeld/umweltamt/aui/HauptFrame.java,
	  src/de/bielefeld/umweltamt/aui/HibernateSessionFactory.java,
	  src/de/bielefeld/umweltamt/aui/mappings/atl/AtlProbenahmen.java,
	  src/de/bielefeld/umweltamt/aui/mappings/atl/AtlAnalyseposition.java,
	  src/de/bielefeld/umweltamt/aui/mappings/atl/AtlStatus.java,
	  src/de/bielefeld/umweltamt/aui/mappings/vaws/VawsVerwaltungsverf.java,
	  src/de/bielefeld/umweltamt/aui/mappings/vaws/VawsKontrollen.java,
	  src/de/bielefeld/umweltamt/aui/mappings/vaws/VawsFachdaten.java,
	  src/de/bielefeld/umweltamt/aui/mappings/basis/BasisObjektverknuepfung.java,
	  src/de/bielefeld/umweltamt/aui/mappings/basis/BasisStandort.java,
	  src/de/bielefeld/umweltamt/aui/mappings/basis/BasisBetreiber.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/Anh52Fachdaten.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/Anh53Fachdaten.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/Anh55Fachdaten.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/ViewBwk.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/IndeinlGenehmigung.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/AbstractAnh49Ortstermine.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/AnhSuevFachdaten.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/Anh49Analysen.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/AbstractAnh49Abscheiderdetails.java,
	  src/de/bielefeld/umweltamt/aui/mappings/indeinl/IndeinlUebergabestelle.java:
	  Nicht verwendete importierte Klassen entfernt. "*"-Imports wurden jedoch
	  nicht bereinigt.

2010-12-03  Ingo Weinzierl <ingo@intevation.de>

	* build.xml: Neue Option 'javadoc'. Der Aufruf `ant javadoc` generiert nun
	  eine HTML Ausgabe der JavaDoc im Verzeichnis `doc`.

2010-12-03  Ingo Weinzierl <ingo@intevation.de>

	* auik.properties: Entfernt. Diese Datei ändert sich ggf bei jeder Nutzung
	  des Programms und gehört daher nicht in die Versionsverwaltung.

	* *.java: Code bereinigt. Tabs durch vier Leerzeichen ersetzt und Trailing
	  Spaces entfernt. Folgende sed Aufrufe per Console verwendet:

	    sed -i -e 's/\t/    /g' `find -name \*.java`
	    sed -i -e 's/[ ]*$// `find -name \*.java`

2010-12-03  Ingo Weinzierl <ingo@intevation.de>

	* src/de/bielefeld/umweltamt/aui/HibernateSessionFactory.java: Der Name der
	  Konfigurationsdatei, die von Hibernate genutzt wird, wird aus einer System
	  Property 'auik.hibernate.config' gelesen. Falls keine solche System
	  Property existiert, wird 'hibernate.cfg.xml' als standard Dateiname
	  genutzt.
	
	* build.xml: Beim Starten der Anwendung wird eine System Property
	  hinzugefügt, die auf die zu nutzende Konfigurationsdatei für Hibernate
	  verweist (siehe oben). Der standard Wert dieser System Property ist
	  'hibernate.cfg.xml'. Um eine andere Hibernate Konfiguration zu verwenden,
	  kann diese Property verändert, oder mit folgendem Aufruf für den nächsten
	  Start angepasst werden:
	
	    ant run -Dauik.hibernate.config=YourConfig.cfg.xml

2010-12-02  Ingo Weinzierl <ingo@intevation.de>

	* build.xml: Neu. Diese Ant Konfiguration hat derzeit 5 Optionen:
	  1) initdb: Initialisiert die Datenbank mittels Hibernate.
	  2) compile: Compiliert die Quellen und kopiert die übersetzten Klassen
	              plus benötigte Icons und Konfigurationen nach 'build'.
	  3) dist:    Erstellt ein Jar-Archiv aus den übersetzten Quellen, Icons und
	              Konfigurationen und kopiert dieses nach 'dist'.
	  4) run:     Übersetzt die Quellen, erstellt und Jar-Archiv und startet die
	              Anwendung (mit Splash-Screen).
	  5) clean:   Entfernt die Ordner 'build' und 'dist'.

	Hinweis: das Projekt wurde mittels cvs2svn von CVS in ein SVN Repository
	konvertiert. Im CVS Repository gab es kein ChangeLog. Dies ist jedoch nicht
	der Start des gesamten Projekts, sondern lediglich der Beginn des
	ChangeLogs. Für weitere Infos, siehe 'svn log'.
